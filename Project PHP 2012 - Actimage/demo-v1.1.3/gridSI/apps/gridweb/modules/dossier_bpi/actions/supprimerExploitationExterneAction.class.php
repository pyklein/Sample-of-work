<?php

/**
 * Suppression d'une exploitation Externe d'une rÃ©compense d'un dossier BPI
 *
 * @author Alexandre WETTA
 */
class supprimerExploitationExterneAction extends gridAction {

  public function preExecute() {
    //on verifie si il y a un id du dossier BPI sinon on redirige
    if ($this->getRequest()->hasParameter('exploitation_id')
            && $this->getRequest()->hasParameter('dossier_id')
            && $this->getRequest()->hasParameter('inventeur_id')) {

      $this->expExtId = $this->getRequestParameter('exploitation_id');
      $this->dossierId = $this->getRequestParameter('dossier_id');
      $this->inventeurId = $this->getRequestParameter('inventeur_id');
    } else {
      $this->getUser()->setFlash('warning', libelle('msg_credentials_acces_non_autorise'));
      $this->redirect('dossier_bpi/listerDossier_bpis');
    }
  }

  public function execute($request) {

    //on cherche le dossier BPI
    $this->dossierBpi = Dossier_bpiTable::getInstance()->findOneById($this->dossierId);

    if ($this->dossierBpi) {

      $objExpExt = Exploitation_externeTable::getInstance()->findOneById($this->expExtId);

      if ($request->isMethod('post')) {
        $objExpExt->delete();
        $this->getUser()->setFlash('succes', libelle("msg_exploitation_externe_suppression_reussie"));
        $this->redirect('dossier_bpi/modifierRecompenses?dossier_bpi_id=' . $this->dossierId ."&inventeur_id=".$this->inventeurId);
      }
      
    } else {
      $this->getUser()->setFlash('warning', libelle('msg_credentials_acces_non_autorise'));
      $this->redirect('dossier_bpi/listerDossier_bpis');
    }


  }

}
?>
