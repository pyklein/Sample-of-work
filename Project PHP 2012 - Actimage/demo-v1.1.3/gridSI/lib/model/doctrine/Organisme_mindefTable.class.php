<?php

/**
 * Organisme_mindefTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Organisme_mindefTable extends Doctrine_Table {

  /**
   * Returns an instance of this class.
   *
   * @return object Organisme_mindefTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Organisme_mindef');
  }

  /**
   * Retourne une doctrine collection d'entite en fonction de l'organisme MINDEF
   *
   * @param integer $orgMindefId - L'identifiant de l'organisme Mindef
   * @return DoctrineCollection
   *
   * @author Actimage
   */
  public function getEntitesAppartenantOrgMindef($orgMindefId) {
    $requete = Doctrine_Core::getTable('Organisme_mindef')
                    ->createQuery('e')
                    ->from('Entite e')
                    ->where("organisme_mindef_id = ?", $orgMindefId);
    return $requete->execute();
  }

  /**
   * Retourne une seule instance d'Organisme_mindef en se basant sur un clé id.
   *
   * @param integer $id - L'identifiant dans la base de donnée
   * @return object Si l'organisme est trouver, null sinon
   *
   * @author Simeon PETEV
   */
  public function getOrganismeMindefAvecCetId($id) {
    if (sfContext::hasInstance())
      sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ DEBUT; ");

    $objQuery = Organisme_mindefTable::getInstance()->getQueryObject()
                    ->where("id = ?", $id);

    $arrInstancesOrgs = $objQuery->execute();

    if (sfContext::hasInstance())
      sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ FIN; ");

    return (count($arrInstancesOrgs) == 0) ? null : $arrInstancesOrgs[0];
  }

  /**
   * Recupere toutes les organismes de Mindef et tout les entité qui correspond
   * à chaque organisme
   *
   * @param boolean $getInactifsAussi Sert a recupere toutes les entres en s'absetnant
   *                                  de leur état (actif/inactif)
   * @return array Un array de type array("nomOrgMinDef_1" => array("id"=>"idOrgMinDef_1",
   *                                                                "ent"=>array("nomEntite_1"=>"idEntite_1",
   *                                                                             "nomEntite_2"=>"idEntite_2"
   *                                                                            )
   *                                                                )
   *                                      )
   *
   * @author Simeon PETEV
   */
  public function getOrganismMindefEntitesPourSelectBox($getInactifsAussi=false) {
    if (sfContext::hasInstance())
      sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ DEBUT; ");

    $arrOrgEnt = array();

    $arrOrganismes = Doctrine_Core::getTable('Organisme_mindef')
                    ->createQuery('a')
                    ->execute();

    if ($getInactifsAussi) {
      foreach ($arrOrganismes as $org) {
        $arrOrgEnt[$org->getIntitule()]["id"] = $org->getId();

        $arrEntites = $org->getEntite();

        foreach ($arrEntites as $ent) {
          $arrOrgEnt[$org->getIntitule()]["ent"][$ent->getIntitule()] = $ent->getId();
        }
      }
    } else {
      foreach ($arrOrganismes as $org) {
        if ($org->getEstActif()) {
          $arrOrgEnt[$org->getIntitule()]["id"] = $org->getId();

          $arrEntites = $org->getEntite();

          foreach ($arrEntites as $ent) {
            if ($ent->getEstActif()) {
              $arrOrgEnt[$org->getIntitule()]["ent"][$ent->getIntitule()] = $ent->getId();
            }
          }
        }
      }
    }

    //Trier les organisme par intitule
    ksort($arrOrgEnt);

    //Pour chaque organisme - trier les entite par nom
    foreach ($arrOrgEnt as $organ => $arrIdEnt) {
      foreach ($arrIdEnt as $keyArrIdEnt => $valArrIdEnt) {
        if (strcmp($keyArrIdEnt, "ent") == 0) {
          ksort($arrOrgEnt[$organ][$keyArrIdEnt]);
        }
      }
    }

    if (sfContext::hasInstance())
      sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ FIN; ");

    return $arrOrgEnt;
  }

  /**
   * Retourne les organismes MINDEF par ordre des intitulés
   *
   * @return Requete
   * @author: Alexandre WETTA
   */
  public function retrieveOrganismesMindef($requete = null) {
    if ($requete == null) {
      $requete = $this->createQuery();
    }
    return $requete->orderBy('intitule');
  }

  /**
   * Retourne les organismes MINDEF actifs
   *
   * @return Doctrine_Collection
   * @author: Actimage
   */
  public function retrieveOrganismesMindefActif()
  {
    $requete = $this->createQuery('o')
                    ->where("o.est_actif = 1");
    return $this->retrieveOrganismesMindef($requete)->execute();
  }

  /**
   * Retourne la requete des organismes MINDEF actifs
   * @return Doctrine_Query
   * @author Gabor JAGER
   */
  public function retrieveOrganismesMindefActifPourSelectBox()
  {
    $objRequete = $this->createQuery('o')
                    ->where("o.est_actif = 1")
                    ->orderBy("o.abreviation");
    return $objRequete;
  }

  /**
   * Retourne l'organisme MINDEF qui correspond à une entité
   *
   * @return DoctrineCollection
   * @param Integer $entiteId L'id de l'entité
   * @author: Actimage
   */
  public function retrieveOrgMindefByEntiteId($entiteId) {

    $objEntite= Doctrine_Core::getTable('Entite')
                    ->findOneById($entiteId);

    $requeteOrgMindef = $this->createQuery('o')
                    ->where("id = ?", $objEntite->getOrganismeMindefId());

    return $requeteOrgMindef->execute();
  }

}