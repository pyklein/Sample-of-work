<?php

/**
 * Commission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Commission extends BaseCommission {

  public function getLibelleEstSelection() {
    return $this->getEstSelection() ? libelle("msg_commission_libelle_est_selection") : libelle("msg_commission_libelle_est_preselection");
  }

  public function getLibelleEtat() {
    $dateDebut = $this->getDateDebut();
    $dateFin = $this->getDateFin();
    if ($dateDebut > date('Y-m-d H:i:s')) {
      return libelle('msg_commission_date_futur');
    } elseif ($dateFin < date('Y-m-d H:i:s')) {
      return libelle('msg_commission_date_passe');
    } else {
      return libelle('msg_commission_date_courante');
    }
  }

  public function getAnnee() {
    return $this->getDateTimeObject('date_debut')->format('Y');
  }

  /** retourne la redirection pour le listage des dossiers en fonction d'un commission
   * @param Integer $id Id de la commission
   * @author Actimage
   */
  public function getRedirectionListeDossier($id) {

    $objCommission = CommissionTable::getInstance()->findOneById($id);

    // la commission fait du suivi(onglet Dossier en cours) et de l'analyse (onglet proposition)
    if ($objCommission->getEstAnalyse()){
      $strRedirection = 'proposition=true';
    }else if($objCommission->getEstSuivi()){
       $strRedirection = 'EnCours=true';
    }
      return $strRedirection;
  }

  /**
   * Renvoie libelle "Dossiers" ou "Propositions" pour l'affichage des boutons dans la liste des commisssions
   */
  public function getLibellePourListeCommission($intCommissionId)
  {
    $objCommission = CommissionTable::getInstance()->findOneById($intCommissionId);

    if ($objCommission->getEstAnalyse())
    {
      $strLibelle = libelle("msg_bouton_propositions");
    }
    else if($objCommission->getEstSuivi())
    {
      $strLibelle = libelle("msg_bouton_dossiers");
    }
    
    return $strLibelle;
  }

  /**
   * Permet d'afficher un picto diffÃ©rent selon le type de commission: "est_analyse" ou "est_suivi"
   */
  public function getClasseBoutonPourListeCommission($intCommissionId)
  {
    $objCommission = CommissionTable::getInstance()->findOneById($intCommissionId);

    if ($objCommission->getEstAnalyse())
    {
      $strClasse = 'picto_court bt_liste';
    }
    else if($objCommission->getEstSuivi())
    {
      $strClasse = 'picto_court bt_liste2';
    }

    return $strClasse;
  }

  /**
   *  Affiche un deuxieme lien pour aller directement dans les dossier en cours dans le cas la commission a les deux types: "est_analyse" et "est_suivi"
   * @param Integer $intCommissionId
   * @return boolean pour afficher le lien ou non
   */
  public function getTypeCommission($intCommissionId)
  {
    $objCommission = CommissionTable::getInstance()->findOneById($intCommissionId);
    $boolAffiche = false;
    if($objCommission->getEstAnalyse() && $objCommission->getEstSuivi())
    {
      $boolAffiche = true;
    }

    return $boolAffiche;
  }

}