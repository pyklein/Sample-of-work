<?php

/**
 * Session_valorisation_interneTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Session_valorisation_interneTable extends Session_supportTable
{
  /**
   * Returns an instance of this class.
   *
   * @return object Session_valorisation_interneTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Session_valorisation_interne');
  }

  /**
   * Permet d'initialiser la table de session avec les valeurs déjà enregistrées
   * @param string $strToken
   * @param integer $intDossierId
   * @author Gabor JAGER
   */
  public function initDonnees($strToken, $intDossierId)
  {
    $arrValorisationsInternes = Valorisation_interneTable::getInstance()->getValorisationsInternesByDossierId($intDossierId);

    foreach($arrValorisationsInternes as $objValorisationInterne)
    {
      $objSession = new Session_valorisation_interne();
      $objSession->setTransactionToken($strToken);
      $objSession->setOrganismeMindefId($objValorisationInterne->getOrganismeMindefId());
      $objSession->setDateDebutExploitation($objValorisationInterne->getDateDebutExploitation());

      $objSession->save();
    }
  }

  /**
   * Permet de recuperer tous les valorisations internes
   * @param string $strToken
   * @return Doctrine_Collection
   * @author Gabor JAGER
   */
  public function getValorisationsInternesSessionByToken($strToken)
  {
    $objRequete = $this->createQuery('s')
                       ->leftJoin("s.OrganismeMindef o ON s.organisme_mindef_id = o.id")
                       ->where("s.transaction_token = ?", $strToken)
                       ->orderBy("o.intitule");

    return $objRequete->execute();
  }

  /**
   * Permet de recuperer tous les valorisations externes
   * @param string $intOrganismeMindefId
   * @param string $strDateDebutExploitation
   * @param string $strToken
   * @return Session_valorisation_interne
   * @author Gabor JAGER
   */
  public function getValorisationsInternesSessionByOrganismeDateToken($intOrganismeMindefId, $strDateDebutExploitation, $strToken)
  {
    $objRequete = $this->createQuery('s')
                       ->where("s.transaction_token = ?", $strToken)
                       ->andWhere("s.organisme_mindef_id = ?", $intOrganismeMindefId)
                       ->andWhere("s.date_debut_exploitation = ?", $strDateDebutExploitation);

    $objResultat = $objRequete->execute();

    if (count($objResultat) == 0)
    {
      return null;
    }

    return $objResultat[0];
  }
}