<?php

/**
 * BudgetTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BudgetTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BudgetTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Budget');
    }

    public function getBudgetParDossierId($intDossierId)
    {
      $objRequeteDoctrine = $this->createQuery('b')->where('b.dossier_mip_id = ?',$intDossierId)
                                                   ->orderBy('date_budget','ASC');
      return $objRequeteDoctrine->execute();
    }

   /**
    * Recupere les budjet de tous les dossiers avec un suivis(historique) pas-à-pas
    *
    * @return array Un array de type array("dossier_id_1" => array("date_financement_1" => "montant_1",
    *                                                              "date_financement_2" => "montant_2 (+/-) montant_1",
    *                                                               ...
    *                                                              ),
    *                                      "dossier_id_2" => array("date_financement_1" => "montant_1",
    *                                                              "date_financement_2" => "montant_2 (+/-) montant_1",
    *                                                               ...
    *                                                              )
    *                                      )
    *                Chaque fois le montant est mis a jour et represente le financement
    *                 total à cette date
    *
    * @author Simeon PETEV
    */
   public function getBudgetsToutDossierParDates()
   {
     if (sfContext::hasInstance())
      sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ DEBUT; ");

     $objQuery = $this->getInstance()->getQueryObject()
                                          ->orderBy('date_budget ASC')
     ;

     $arrBudgets = $objQuery->execute();

     $arrDossierBudget = array();

     foreach ($arrBudgets as $objBudget)
     {
       $boolEstNegatifBudget  = $objBudget->getBudget_type()->getEstNegatif();
       $floatMontantBudget    = $objBudget->getMontant();
       $intIdDossierBudget    = $objBudget->getDossierMipId();
       $strDateBudget         = $objBudget->getDateBudget();

        if (isset ($arrDossierBudget[$intIdDossierBudget]))
        {
          if (isset($arrDossierBudget[$intIdDossierBudget][$strDateBudget]))
          {
            if ($boolEstNegatifBudget)
            {
              $arrDossierBudget[$intIdDossierBudget][$strDateBudget] -= $floatMontantBudget;
            } else
            {
              $arrDossierBudget[$intIdDossierBudget][$strDateBudget] += $floatMontantBudget;
            }
          } else
          {
            if ($boolEstNegatifBudget)
            {
              $arrDossierBudget[$intIdDossierBudget][$strDateBudget] = end($arrDossierBudget[$intIdDossierBudget]) - $floatMontantBudget;
            } else
            {
              $arrDossierBudget[$intIdDossierBudget][$strDateBudget] = end($arrDossierBudget[$intIdDossierBudget]) + $floatMontantBudget;
            }
          }
        } else
        {
          if ($boolEstNegatifBudget)
          {
            $arrDossierBudget[$intIdDossierBudget][$strDateBudget] = -$floatMontantBudget;
          } else
          {
            $arrDossierBudget[$intIdDossierBudget][$strDateBudget] = $floatMontantBudget;
          }
        }
     }

     if (sfContext::hasInstance())
       sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ FIN; ");

     return $arrDossierBudget;
   }

   /**
    * Retourne le budget total de tous les dossiers
    * @return array  Tableau sous la forme $tableau["dossier_mip_id"] = "budget_total"
    * @author Alexandre WETTA
    */
   public function getBudgetTotalParDossier(){

     $objQuery = $this->getInstance()->getQueryObject()
                                          ->orderBy('dossier_mip_id ASC')
     ;

     $arrBudgets = $objQuery->execute();
     
     
     $arrDossierBudget = array();

     foreach ($arrBudgets as $objBudget){
       $boolEstNegatifBudget  = $objBudget->getBudget_type()->getEstNegatif();
       $intIdDossierBudget    = $objBudget->getDossierMipId();

       if(!key_exists($intIdDossierBudget, $arrDossierBudget)){
         $floatMontant = ($boolEstNegatifBudget) ? -$objBudget->getMontant() : $objBudget->getMontant();
         $arrDossierBudget[$intIdDossierBudget] = $floatMontant;
       }else{
          $floatMontant = ($boolEstNegatifBudget)? -$objBudget->getMontant() : $objBudget->getMontant();
          $totalTemp = $arrDossierBudget[$intIdDossierBudget] + $floatMontant ;
          $arrDossierBudget[$intIdDossierBudget] = $totalTemp;
       }

     }

     return $arrDossierBudget;

   }
}