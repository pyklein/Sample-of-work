<?php

/**
 * EtudiantTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EtudiantTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EtudiantTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Etudiant');
    }

    public function retrieveEtudiantsParOrdre()
    {
      $requete = Doctrine_Query::create()
              -> from('Etudiant')
              ->orderBy('nom');
      
      return $requete;
    }

    /**
     * Retrouve les étudiants actifs qui n'ont pas de dossier de thèse
     * ni de stages postdoctoral, ni de stage ERE
     *
     * @param Integer $dossier_id Id du dossier
     * @param String $type_dossier Type du dossier: these, ere, postdoc
     * @author Alexandre WETTA
     * @return Doctrine_Collection retourne une collection d'étudiants sans dossier
     */
    public function getEtudiantSansDossier($dossier_id = null, $type_dossier = null){

  
      //on cherche tous les étudiants
      $objRequeteDoctrine = $this->createQuery('e')->orderBy('e.nom ASC');
      $arrEtudiantAll = $objRequeteDoctrine->execute();

      //nouvelle collection pour mettre les étudiants dedans
      $arrEtudiantCanon = new Doctrine_Collection('Etudiant');

       //on cherche le dossier these
      if($type_dossier == 'these'){
        $objDossier = Dossier_theseTable::getInstance()->findOneById($dossier_id);
      }

       //on cherche le dossier postdoc
      if($type_dossier == 'postdoc'){
        $objDossier = Dossier_postdocTable::getInstance()->findOneById($dossier_id);
      }

       //on cherche le dossier ere
      if($type_dossier == 'ere'){
        $objDossier = Dossier_ereTable::getInstance()->findOneById($dossier_id);
      }

      //on ajoute l'etudiant dans la doctrine collection s'il existe
      if(isset($objDossier) && $objDossier->getRealisePar()!= null) $objEtudiantDossier = EtudiantTable::getInstance()->findOneById($objDossier->getRealisePar());
      if(isset($objEtudiantDossier) && $objEtudiantDossier != null) $arrEtudiantCanon->add($objEtudiantDossier);

    
      foreach ($arrEtudiantAll as $objEtudiant) {

        //vérification s'il a un dossier de thèse
        $checkDossierThese = Dossier_theseTable::getInstance()->findOneByRealisePar($objEtudiant->getId());
        //vérification s'il a un dossier postdoctoral
        $checkDossierpostdoc = Dossier_postdocTable::getInstance()->findOneByRealisePar($objEtudiant->getId());
        //vérification s'il a un dossier ERE
        $checkDossierEre = Dossier_ereTable::getInstance()->findOneByRealisePar($objEtudiant->getId());

        //si il n'est dans rien, alors on l'ajoute dans la collection
        if(!$checkDossierThese && !$checkDossierpostdoc && !$checkDossierEre && $objEtudiant->getEstActif()){
          $arrEtudiantCanon->add($objEtudiant);
        }
    }
    return $arrEtudiantCanon;


    }

  /**
   * Permet de construire une query qui va recupere les etudiant en se bazant sur
   * un filtre etudiant
   *
   * @param object $objFiltreEtudiant EtudiantFilter
   * @return Doctrine_Query
   */
  public function buildQueryAvecFiltre($objFiltreEtudiant)
  {
    $objQuery = $this->getInstance()->getQueryObject();

    $arrValeursFiltre = $objFiltreEtudiant->getValues();

    if (!empty($arrValeursFiltre['nom']["text"])) {
      $objQuery = $objQuery->where("(" . 'nom' . " LIKE ? OR " . 'prenom' . " LIKE ? OR " . 'email' . " LIKE ?)",
                      array("%" . $arrValeursFiltre['nom']["text"] . "%", "%" . $arrValeursFiltre['nom']["text"] . "%", "%" . $arrValeursFiltre['nom']["text"] . "%")
      );
    }

    $objQuery = $objQuery
                    ->orderBy('nom ASC')
                    ->orderBy('prenom ASC')
    ;

    return $objQuery;
  }
}