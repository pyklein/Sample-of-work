<?php

/**
 * Statut_dossier_bpi
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Statut_dossier_bpi extends BaseStatut_dossier_bpi
{
  public function __toString() {
    return $this->getIntitule();
  }


  public function getSuivant() {
    return Statut_dossier_bpiTable::getInstance()->getNextStatut($this->getId());
  }

  public function save(Doctrine_Connection $conn = null, $immediate = false) {
    if (sfContext::hasInstance()){
      $logger = sfContext::getInstance()->getLogger();
    } else {
      parent::save();
    }
    if ($immediate) {
      if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Immediate : '.$this->getIntitule());}
      parent::save();
    } else {
      if ($this->isNew()) {
        //récuperation du statut précédent du statut en cours
        $objStatutPrecedent = $this->getPrecedent();

        //cas insertion à la racine
        if ($objStatutPrecedent->getId() == null) {
          $objStatutSuivant = Statut_dossier_bpiTable::getInstance()->findRoot();
          //cas Premier Statut enregistré
          if ($objStatutSuivant === false) {
            if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Premier statut (new) :'.$this->getIntitule());}
            parent::save();
          } else {
            //cas insertion devant un autre à la racine
            $this->setPrecedent(null);
             if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Insertion racine (new) :'.$this->getIntitule());}
            parent::save();
            $objStatutSuivant->setPrecedentStatutDossierBpiId($this->getId());
            $objStatutSuivant->save(null, true);
          }
        } else {
          $objStatutSuivant = $objStatutPrecedent->getSuivant();
          //cas insertion à la fin
          if ($objStatutSuivant === false) {
             if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Insertion fin (new) :'.$this->getIntitule());}
            parent::save();
          } else {
             if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Insertion milieu (new) :'.$this->getIntitule());}
            parent::save();
            $objStatutSuivant->setPrecedent($this);
            $objStatutSuivant->save(null, true);
            ;
          }
        }
      } else {
        $arrChampsModifies = $this->getModified(true);
        //cas activation/désactivation ou changement de libelle
        if (!array_key_exists('precedent_statut_dossier_bpi_id', $arrChampsModifies)) {
           if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Modification autre :'.$this->getIntitule());}
          parent::save();
        } else {
          //recupération ancien précedent
          $strAncienPrecedentId = $arrChampsModifies['precedent_statut_dossier_bpi_id'];
          //récupération ancien suivant
          $intAncienSuivantId = $this->getSuivant() != false ? $this->getSuivant()->getId() : null;


          //liaison ancien suivant -> ancien précedent
          if ($intAncienSuivantId != null) {
            $objAncienSuivant = Statut_dossier_bpiTable::getInstance()->findOneById($intAncienSuivantId);
            $objAncienSuivant->setPrecedentStatutDossierBpiId($strAncienPrecedentId);
            $objAncienSuivant->save(null, true);
          }

          $intStatutPrecedentId = $this->getPrecedentStatutDossierBpiId();

          //réinsertion de notre objet à enregistrer
          //cas insertion à la racine
          if ($intStatutPrecedentId == null) {
            $objStatutSuivant = Statut_dossier_bpiTable::getInstance()->findRoot();
            //cas Premier Statut enregistré
            if ($objStatutSuivant === false) {
               if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Premier statut :'.$this->getIntitule());}
              parent::save();
            } else {
              //cas insertion devant un autre à la racine
              $this->setPrecedent(null);
               if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Insertion racine :'.$this->getIntitule());}
              parent::save();
              $objStatutSuivant->setPrecedentStatutDossierBpiId($this->getId());
              $objStatutSuivant->save(null, true);
            }
          } else {
            $objStatutSuivant = Statut_dossier_bpiTable::getInstance()->getNextStatut($intStatutPrecedentId);
            //cas insertion à la fin
            if ($objStatutSuivant === false) {
               if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Insertion fin :'.$this->getIntitule());}
              parent::save();
              return;
            } else {
               if (isset($logger)) { $logger->debug('{Statut_dossier_bpi::Save()} Insertion milieu :'.$this->getIntitule());}
              parent::save();
              $objStatutSuivant->setPrecedent($this);
              $objStatutSuivant->save(null, true);
              ;
            }
          }
        }
      }
    }
  }
}