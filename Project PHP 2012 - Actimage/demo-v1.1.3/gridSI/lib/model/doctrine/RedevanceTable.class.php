<?php

/**
 * RedevanceTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RedevanceTable extends Doctrine_Table {

  /**
   * Returns an instance of this class.
   *
   * @return object RedevanceTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Redevance');
  }

  /**
   * Retourne les redevances d'un dossier BPI
   * @param Integer $dossierId L'id du dossier BPI
   * @author Alexandre WETTA
   * @return Doctrine_query
   */
  public function retrieveRedevances($dossierId) {
    $objRequete = $this->createQuery('b')
                    ->where('b.dossier_bpi_id = ?', $dossierId)
                    ->innerJoin('b.Organisme o')
                    ->orderBy('o.intitule ASC');

    return $objRequete;
  }

  /**
   * Retourne les redevances actives d'un dossier BPI + filtrage par redevance
   * @param Integer $dossierId        Id du dossier BPI
   * @param Integer $partInventiveId  Id de la part inventive
   * @author Alexandre WETTA
   * @return Doctrine_query
   */
  public function retrieveRedevancesActivesPourRecompenses($dossierId, $partInventiveId) {

    //on cherche les redevance de cession déjà utilisées pour les enlever ensuite de la requète de sortie
     $arrExpExterne = Exploitation_externeTable::getInstance()->findByPartInventiveId($partInventiveId);
     $arrRedevanceId = array();
     foreach ($arrExpExterne as $objExp){
       $objRedevance = $objExp->getRedevance();
       if($objRedevance->getTypeRedevanceId() == Type_redevanceTable::CESSION){
        $arrRedevanceId[] = $objRedevance->getId();
       }
     }
     
    $objRequete = $this->createQuery('r')
                    ->where('r.dossier_bpi_id = ?', $dossierId)
                    ->andWhere('r.est_actif = 1')
                    ->andWhereNotIn('r.id', $arrRedevanceId)
                    ->innerJoin('r.Organisme o')
                    ->orderBy('o.intitule ASC');

    return $objRequete;
  }

}