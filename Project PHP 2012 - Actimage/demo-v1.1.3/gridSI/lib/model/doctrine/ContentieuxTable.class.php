<?php

/**
 * ContentieuxTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ContentieuxTable extends Doctrine_Table {

  /**
   * Returns an instance of this class.
   *
   * @return object ContentieuxTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Contentieux');
  }

  /**
   * Retourne un objet contentieux en fonction d'une part inventive et d'un type de contentieux
   * @param <Integer> $partInventiveId Id de la part Inventive
   * @param <string> $typeContentieux Type de contentieux (invention, droits, exploitation)
   * @return <objet> Contentieux
   * @author Alexandre WETTA
   */
  public function retrieveContentieuxBypartInventiveId($partInventiveId, $typeContentieux) {

    $typeContId = null;
    
    if ($typeContentieux == 'invention') {
      $typeContId = Type_contentieuxTable::INVENTION;
    }else if($typeContentieux == 'droits'){
      $typeContId = Type_contentieuxTable::DROITS;
    }else if($typeContentieux == 'exploitation'){
      $typeContId = Type_contentieuxTable::EXPLOITATION_INTERNE;
    }

    $doctrineQuery = $this->createQuery('c')->where('part_inventive_id= ?', $partInventiveId)
                    ->andWhere('type_contentieux_id = ?', $typeContId);

    $arrResults = $doctrineQuery->execute() ;
    if(count($arrResults) != 0){
    $objContentieux = $arrResults[0];
    }else{
      $objContentieux = null ;
    }
    
    return $objContentieux;
  }

}