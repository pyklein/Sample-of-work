<?php

/**
 * BaseAlerte_bpi
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $type_alerte_bpi_id
 * @property date $date_alerte
 * @property date $date_echeance
 * @property integer $dossier_bpi_id
 * @property integer $brevet_id
 * @property integer $action_id
 * @property boolean $deja_passe
 * @property Type_alerte_bpi $TypeAlerteBpi
 * @property Dossier_bpi $DossierBpi
 * @property Brevet $Brevet
 * @property Action $Action
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * 
 * @method integer         getTypeAlerteBpiId()      Returns the current record's "type_alerte_bpi_id" value
 * @method date            getDateAlerte()           Returns the current record's "date_alerte" value
 * @method date            getDateEcheance()         Returns the current record's "date_echeance" value
 * @method integer         getDossierBpiId()         Returns the current record's "dossier_bpi_id" value
 * @method integer         getBrevetId()             Returns the current record's "brevet_id" value
 * @method integer         getActionId()             Returns the current record's "action_id" value
 * @method boolean         getDejaPasse()            Returns the current record's "deja_passe" value
 * @method Type_alerte_bpi getTypeAlerteBpi()        Returns the current record's "TypeAlerteBpi" value
 * @method Dossier_bpi     getDossierBpi()           Returns the current record's "DossierBpi" value
 * @method Brevet          getBrevet()               Returns the current record's "Brevet" value
 * @method Action          getAction()               Returns the current record's "Action" value
 * @method Utilisateur     getUtilisateurCreatedBy() Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur     getUtilisateurUpdatedBy() Returns the current record's "UtilisateurUpdatedBy" value
 * @method Alerte_bpi      setTypeAlerteBpiId()      Sets the current record's "type_alerte_bpi_id" value
 * @method Alerte_bpi      setDateAlerte()           Sets the current record's "date_alerte" value
 * @method Alerte_bpi      setDateEcheance()         Sets the current record's "date_echeance" value
 * @method Alerte_bpi      setDossierBpiId()         Sets the current record's "dossier_bpi_id" value
 * @method Alerte_bpi      setBrevetId()             Sets the current record's "brevet_id" value
 * @method Alerte_bpi      setActionId()             Sets the current record's "action_id" value
 * @method Alerte_bpi      setDejaPasse()            Sets the current record's "deja_passe" value
 * @method Alerte_bpi      setTypeAlerteBpi()        Sets the current record's "TypeAlerteBpi" value
 * @method Alerte_bpi      setDossierBpi()           Sets the current record's "DossierBpi" value
 * @method Alerte_bpi      setBrevet()               Sets the current record's "Brevet" value
 * @method Alerte_bpi      setAction()               Sets the current record's "Action" value
 * @method Alerte_bpi      setUtilisateurCreatedBy() Sets the current record's "UtilisateurCreatedBy" value
 * @method Alerte_bpi      setUtilisateurUpdatedBy() Sets the current record's "UtilisateurUpdatedBy" value
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseAlerte_bpi extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('alerte_bpi');
        $this->hasColumn('type_alerte_bpi_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date_alerte', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('date_echeance', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('dossier_bpi_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('brevet_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('action_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('deja_passe', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Type_alerte_bpi as TypeAlerteBpi', array(
             'local' => 'type_alerte_bpi_id',
             'foreign' => 'id'));

        $this->hasOne('Dossier_bpi as DossierBpi', array(
             'local' => 'dossier_bpi_id',
             'foreign' => 'id'));

        $this->hasOne('Brevet', array(
             'local' => 'brevet_id',
             'foreign' => 'id'));

        $this->hasOne('Action', array(
             'local' => 'action_id',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}