<?php

/**
 * BaseInvitation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $commission_id
 * @property integer $service_id
 * @property integer $laboratoire_id
 * @property Commission $Commission
 * @property Service $Service
 * @property Laboratoire $Laboratoire
 * @property Doctrine_Collection $Session_invitation_commission
 * @property Doctrine_Collection $Evaluation
 * 
 * @method integer             getId()                            Returns the current record's "id" value
 * @method integer             getCommissionId()                  Returns the current record's "commission_id" value
 * @method integer             getServiceId()                     Returns the current record's "service_id" value
 * @method integer             getLaboratoireId()                 Returns the current record's "laboratoire_id" value
 * @method Commission          getCommission()                    Returns the current record's "Commission" value
 * @method Service             getService()                       Returns the current record's "Service" value
 * @method Laboratoire         getLaboratoire()                   Returns the current record's "Laboratoire" value
 * @method Doctrine_Collection getSessionInvitationCommission()   Returns the current record's "Session_invitation_commission" collection
 * @method Doctrine_Collection getEvaluation()                    Returns the current record's "Evaluation" collection
 * @method Invitation          setId()                            Sets the current record's "id" value
 * @method Invitation          setCommissionId()                  Sets the current record's "commission_id" value
 * @method Invitation          setServiceId()                     Sets the current record's "service_id" value
 * @method Invitation          setLaboratoireId()                 Sets the current record's "laboratoire_id" value
 * @method Invitation          setCommission()                    Sets the current record's "Commission" value
 * @method Invitation          setService()                       Sets the current record's "Service" value
 * @method Invitation          setLaboratoire()                   Sets the current record's "Laboratoire" value
 * @method Invitation          setSessionInvitationCommission()   Sets the current record's "Session_invitation_commission" collection
 * @method Invitation          setEvaluation()                    Sets the current record's "Evaluation" collection
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseInvitation extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('invitation');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('commission_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('laboratoire_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Commission', array(
             'local' => 'commission_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Laboratoire', array(
             'local' => 'laboratoire_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Session_invitation_commission', array(
             'local' => 'id',
             'foreign' => 'invitation_id'));

        $this->hasMany('Evaluation', array(
             'local' => 'id',
             'foreign' => 'invitation_id'));
    }
}