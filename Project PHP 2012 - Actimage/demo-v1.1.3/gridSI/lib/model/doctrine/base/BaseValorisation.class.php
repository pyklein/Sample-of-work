<?php

/**
 * BaseValorisation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $date_demande_generalisation
 * @property string $destinataire_demande_generalisation
 * @property string $avantage_inconvenient
 * @property string $retour_experience
 * @property string $fiche_internet
 * @property integer $dossier_mip_id
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * @property Dossier_mip $Dossier_mip
 * 
 * @method timestamp    getDateDemandeGeneralisation()           Returns the current record's "date_demande_generalisation" value
 * @method string       getDestinataireDemandeGeneralisation()   Returns the current record's "destinataire_demande_generalisation" value
 * @method string       getAvantageInconvenient()                Returns the current record's "avantage_inconvenient" value
 * @method string       getRetourExperience()                    Returns the current record's "retour_experience" value
 * @method string       getFicheInternet()                       Returns the current record's "fiche_internet" value
 * @method integer      getDossierMipId()                        Returns the current record's "dossier_mip_id" value
 * @method Utilisateur  getUtilisateurCreatedBy()                Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur  getUtilisateurUpdatedBy()                Returns the current record's "UtilisateurUpdatedBy" value
 * @method Dossier_mip  getDossierMip()                          Returns the current record's "Dossier_mip" value
 * @method Valorisation setDateDemandeGeneralisation()           Sets the current record's "date_demande_generalisation" value
 * @method Valorisation setDestinataireDemandeGeneralisation()   Sets the current record's "destinataire_demande_generalisation" value
 * @method Valorisation setAvantageInconvenient()                Sets the current record's "avantage_inconvenient" value
 * @method Valorisation setRetourExperience()                    Sets the current record's "retour_experience" value
 * @method Valorisation setFicheInternet()                       Sets the current record's "fiche_internet" value
 * @method Valorisation setDossierMipId()                        Sets the current record's "dossier_mip_id" value
 * @method Valorisation setUtilisateurCreatedBy()                Sets the current record's "UtilisateurCreatedBy" value
 * @method Valorisation setUtilisateurUpdatedBy()                Sets the current record's "UtilisateurUpdatedBy" value
 * @method Valorisation setDossierMip()                          Sets the current record's "Dossier_mip" value
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseValorisation extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('valorisation');
        $this->hasColumn('date_demande_generalisation', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('destinataire_demande_generalisation', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('avantage_inconvenient', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('retour_experience', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('fiche_internet', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('dossier_mip_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Dossier_mip', array(
             'local' => 'dossier_mip_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}