<?php

/**
 * BaseEvenement_mip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $date
 * @property string $evenement
 * @property boolean $est_cloture
 * @property integer $dossier_mip_id
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * @property Dossier_mip $Dossier_mip
 * 
 * @method timestamp     getDate()                 Returns the current record's "date" value
 * @method string        getEvenement()            Returns the current record's "evenement" value
 * @method boolean       getEstCloture()           Returns the current record's "est_cloture" value
 * @method integer       getDossierMipId()         Returns the current record's "dossier_mip_id" value
 * @method Utilisateur   getUtilisateurCreatedBy() Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur   getUtilisateurUpdatedBy() Returns the current record's "UtilisateurUpdatedBy" value
 * @method Dossier_mip   getDossierMip()           Returns the current record's "Dossier_mip" value
 * @method Evenement_mip setDate()                 Sets the current record's "date" value
 * @method Evenement_mip setEvenement()            Sets the current record's "evenement" value
 * @method Evenement_mip setEstCloture()           Sets the current record's "est_cloture" value
 * @method Evenement_mip setDossierMipId()         Sets the current record's "dossier_mip_id" value
 * @method Evenement_mip setUtilisateurCreatedBy() Sets the current record's "UtilisateurCreatedBy" value
 * @method Evenement_mip setUtilisateurUpdatedBy() Sets the current record's "UtilisateurUpdatedBy" value
 * @method Evenement_mip setDossierMip()           Sets the current record's "Dossier_mip" value
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseEvenement_mip extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('evenement_mip');
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('evenement', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('est_cloture', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('dossier_mip_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Dossier_mip', array(
             'local' => 'dossier_mip_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}