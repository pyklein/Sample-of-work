<?php

/**
 * BaseTransfert_cloture
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $date_transfert
 * @property string $reference_transfert
 * @property string $destination_autre
 * @property timestamp $date_cloture
 * @property string $reference_cloture
 * @property integer $dossier_mip_id
 * @property integer $entite_id
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * @property Dossier_mip $Dossier_mip
 * @property Entite $Entite
 * 
 * @method timestamp         getDateTransfert()        Returns the current record's "date_transfert" value
 * @method string            getReferenceTransfert()   Returns the current record's "reference_transfert" value
 * @method string            getDestinationAutre()     Returns the current record's "destination_autre" value
 * @method timestamp         getDateCloture()          Returns the current record's "date_cloture" value
 * @method string            getReferenceCloture()     Returns the current record's "reference_cloture" value
 * @method integer           getDossierMipId()         Returns the current record's "dossier_mip_id" value
 * @method integer           getEntiteId()             Returns the current record's "entite_id" value
 * @method Utilisateur       getUtilisateurCreatedBy() Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur       getUtilisateurUpdatedBy() Returns the current record's "UtilisateurUpdatedBy" value
 * @method Dossier_mip       getDossierMip()           Returns the current record's "Dossier_mip" value
 * @method Entite            getEntite()               Returns the current record's "Entite" value
 * @method Transfert_cloture setDateTransfert()        Sets the current record's "date_transfert" value
 * @method Transfert_cloture setReferenceTransfert()   Sets the current record's "reference_transfert" value
 * @method Transfert_cloture setDestinationAutre()     Sets the current record's "destination_autre" value
 * @method Transfert_cloture setDateCloture()          Sets the current record's "date_cloture" value
 * @method Transfert_cloture setReferenceCloture()     Sets the current record's "reference_cloture" value
 * @method Transfert_cloture setDossierMipId()         Sets the current record's "dossier_mip_id" value
 * @method Transfert_cloture setEntiteId()             Sets the current record's "entite_id" value
 * @method Transfert_cloture setUtilisateurCreatedBy() Sets the current record's "UtilisateurCreatedBy" value
 * @method Transfert_cloture setUtilisateurUpdatedBy() Sets the current record's "UtilisateurUpdatedBy" value
 * @method Transfert_cloture setDossierMip()           Sets the current record's "Dossier_mip" value
 * @method Transfert_cloture setEntite()               Sets the current record's "Entite" value
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseTransfert_cloture extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('transfert_cloture');
        $this->hasColumn('date_transfert', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('reference_transfert', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('destination_autre', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('date_cloture', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('reference_cloture', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('dossier_mip_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('entite_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Dossier_mip', array(
             'local' => 'dossier_mip_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Entite', array(
             'local' => 'entite_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}