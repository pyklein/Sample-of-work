<?php

/**
 * BasePoint_contact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property string $email2
 * @property string $telephone
 * @property string $fax
 * @property string $adresse
 * @property string $adresse2
 * @property string $adresse3
 * @property string $complement_adresse
 * @property integer $ville_id
 * @property string $code_postal
 * @property string $adresse_etrangere
 * @property integer $pays_id
 * @property integer $metier_id
 * @property integer $organisme_id
 * @property integer $laboratoire_id
 * @property integer $service_id
 * @property Ville $Ville
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * @property Metier $Metier
 * @property Organisme $Organisme
 * @property Laboratoire $Laboratoire
 * @property Service $Service
 * @property Pays $Pays
 * 
 * @method integer       getId()                   Returns the current record's "id" value
 * @method string        getEmail()                Returns the current record's "email" value
 * @method string        getEmail2()               Returns the current record's "email2" value
 * @method string        getTelephone()            Returns the current record's "telephone" value
 * @method string        getFax()                  Returns the current record's "fax" value
 * @method string        getAdresse()              Returns the current record's "adresse" value
 * @method string        getAdresse2()             Returns the current record's "adresse2" value
 * @method string        getAdresse3()             Returns the current record's "adresse3" value
 * @method string        getComplementAdresse()    Returns the current record's "complement_adresse" value
 * @method integer       getVilleId()              Returns the current record's "ville_id" value
 * @method string        getCodePostal()           Returns the current record's "code_postal" value
 * @method string        getAdresseEtrangere()     Returns the current record's "adresse_etrangere" value
 * @method integer       getPaysId()               Returns the current record's "pays_id" value
 * @method integer       getMetierId()             Returns the current record's "metier_id" value
 * @method integer       getOrganismeId()          Returns the current record's "organisme_id" value
 * @method integer       getLaboratoireId()        Returns the current record's "laboratoire_id" value
 * @method integer       getServiceId()            Returns the current record's "service_id" value
 * @method Ville         getVille()                Returns the current record's "Ville" value
 * @method Utilisateur   getUtilisateurCreatedBy() Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur   getUtilisateurUpdatedBy() Returns the current record's "UtilisateurUpdatedBy" value
 * @method Metier        getMetier()               Returns the current record's "Metier" value
 * @method Organisme     getOrganisme()            Returns the current record's "Organisme" value
 * @method Laboratoire   getLaboratoire()          Returns the current record's "Laboratoire" value
 * @method Service       getService()              Returns the current record's "Service" value
 * @method Pays          getPays()                 Returns the current record's "Pays" value
 * @method Point_contact setId()                   Sets the current record's "id" value
 * @method Point_contact setEmail()                Sets the current record's "email" value
 * @method Point_contact setEmail2()               Sets the current record's "email2" value
 * @method Point_contact setTelephone()            Sets the current record's "telephone" value
 * @method Point_contact setFax()                  Sets the current record's "fax" value
 * @method Point_contact setAdresse()              Sets the current record's "adresse" value
 * @method Point_contact setAdresse2()             Sets the current record's "adresse2" value
 * @method Point_contact setAdresse3()             Sets the current record's "adresse3" value
 * @method Point_contact setComplementAdresse()    Sets the current record's "complement_adresse" value
 * @method Point_contact setVilleId()              Sets the current record's "ville_id" value
 * @method Point_contact setCodePostal()           Sets the current record's "code_postal" value
 * @method Point_contact setAdresseEtrangere()     Sets the current record's "adresse_etrangere" value
 * @method Point_contact setPaysId()               Sets the current record's "pays_id" value
 * @method Point_contact setMetierId()             Sets the current record's "metier_id" value
 * @method Point_contact setOrganismeId()          Sets the current record's "organisme_id" value
 * @method Point_contact setLaboratoireId()        Sets the current record's "laboratoire_id" value
 * @method Point_contact setServiceId()            Sets the current record's "service_id" value
 * @method Point_contact setVille()                Sets the current record's "Ville" value
 * @method Point_contact setUtilisateurCreatedBy() Sets the current record's "UtilisateurCreatedBy" value
 * @method Point_contact setUtilisateurUpdatedBy() Sets the current record's "UtilisateurUpdatedBy" value
 * @method Point_contact setMetier()               Sets the current record's "Metier" value
 * @method Point_contact setOrganisme()            Sets the current record's "Organisme" value
 * @method Point_contact setLaboratoire()          Sets the current record's "Laboratoire" value
 * @method Point_contact setService()              Sets the current record's "Service" value
 * @method Point_contact setPays()                 Sets the current record's "Pays" value
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BasePoint_contact extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('point_contact');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('telephone', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('fax', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('adresse', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('adresse2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('adresse3', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('complement_adresse', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ville_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('code_postal', 'string', 5, array(
             'type' => 'string',
             'length' => 5,
             ));
        $this->hasColumn('adresse_etrangere', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('pays_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('metier_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('organisme_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('laboratoire_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ville', array(
             'local' => 'ville_id',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Metier', array(
             'local' => 'metier_id',
             'foreign' => 'id'));

        $this->hasOne('Organisme', array(
             'local' => 'organisme_id',
             'foreign' => 'id'));

        $this->hasOne('Laboratoire', array(
             'local' => 'laboratoire_id',
             'foreign' => 'id'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id'));

        $this->hasOne('Pays', array(
             'local' => 'pays_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}