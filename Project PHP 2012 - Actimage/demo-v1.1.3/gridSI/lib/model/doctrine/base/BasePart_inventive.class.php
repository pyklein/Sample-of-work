<?php

/**
 * BasePart_inventive
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $inventeur_id
 * @property integer $dossier_bpi_id
 * @property integer $part_inventive
 * @property Inventeur $Inventeur
 * @property Dossier_bpi $Dossier_bpi
 * @property Doctrine_Collection $Exploitation_interne
 * @property Doctrine_Collection $Recompenses
 * @property Doctrine_Collection $Exploitation_externe
 * @property Doctrine_Collection $Contentieux
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getInventeurId()          Returns the current record's "inventeur_id" value
 * @method integer             getDossierBpiId()         Returns the current record's "dossier_bpi_id" value
 * @method integer             getPartInventive()        Returns the current record's "part_inventive" value
 * @method Inventeur           getInventeur()            Returns the current record's "Inventeur" value
 * @method Dossier_bpi         getDossierBpi()           Returns the current record's "Dossier_bpi" value
 * @method Doctrine_Collection getExploitationInterne()  Returns the current record's "Exploitation_interne" collection
 * @method Doctrine_Collection getRecompenses()          Returns the current record's "Recompenses" collection
 * @method Doctrine_Collection getExploitationExterne()  Returns the current record's "Exploitation_externe" collection
 * @method Doctrine_Collection getContentieux()          Returns the current record's "Contentieux" collection
 * @method Part_inventive      setId()                   Sets the current record's "id" value
 * @method Part_inventive      setInventeurId()          Sets the current record's "inventeur_id" value
 * @method Part_inventive      setDossierBpiId()         Sets the current record's "dossier_bpi_id" value
 * @method Part_inventive      setPartInventive()        Sets the current record's "part_inventive" value
 * @method Part_inventive      setInventeur()            Sets the current record's "Inventeur" value
 * @method Part_inventive      setDossierBpi()           Sets the current record's "Dossier_bpi" value
 * @method Part_inventive      setExploitationInterne()  Sets the current record's "Exploitation_interne" collection
 * @method Part_inventive      setRecompenses()          Sets the current record's "Recompenses" collection
 * @method Part_inventive      setExploitationExterne()  Sets the current record's "Exploitation_externe" collection
 * @method Part_inventive      setContentieux()          Sets the current record's "Contentieux" collection
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BasePart_inventive extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('part_inventive');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('inventeur_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('dossier_bpi_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('part_inventive', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Inventeur', array(
             'local' => 'inventeur_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Dossier_bpi', array(
             'local' => 'dossier_bpi_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Exploitation_interne', array(
             'local' => 'id',
             'foreign' => 'part_inventive_id'));

        $this->hasMany('Recompenses', array(
             'local' => 'id',
             'foreign' => 'part_inventive_id'));

        $this->hasMany('Exploitation_externe', array(
             'local' => 'id',
             'foreign' => 'part_inventive_id'));

        $this->hasMany('Contentieux', array(
             'local' => 'id',
             'foreign' => 'part_inventive_id'));
    }
}