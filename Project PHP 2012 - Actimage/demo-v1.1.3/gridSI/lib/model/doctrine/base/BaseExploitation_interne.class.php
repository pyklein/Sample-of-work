<?php

/**
 * BaseExploitation_interne
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property float $montant
 * @property date $date_decision_ouverture
 * @property date $date_remise_rapport
 * @property date $date_commission
 * @property date $date_decision_recompense
 * @property date $date_versement
 * @property date $date_envoi_lettre
 * @property integer $rapporteur_id
 * @property integer $part_inventive_id
 * @property Utilisateur $Rapporteur
 * @property Part_inventive $Part_inventive
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * 
 * @method float                getMontant()                  Returns the current record's "montant" value
 * @method date                 getDateDecisionOuverture()    Returns the current record's "date_decision_ouverture" value
 * @method date                 getDateRemiseRapport()        Returns the current record's "date_remise_rapport" value
 * @method date                 getDateCommission()           Returns the current record's "date_commission" value
 * @method date                 getDateDecisionRecompense()   Returns the current record's "date_decision_recompense" value
 * @method date                 getDateVersement()            Returns the current record's "date_versement" value
 * @method date                 getDateEnvoiLettre()          Returns the current record's "date_envoi_lettre" value
 * @method integer              getRapporteurId()             Returns the current record's "rapporteur_id" value
 * @method integer              getPartInventiveId()          Returns the current record's "part_inventive_id" value
 * @method Utilisateur          getRapporteur()               Returns the current record's "Rapporteur" value
 * @method Part_inventive       getPartInventive()            Returns the current record's "Part_inventive" value
 * @method Utilisateur          getUtilisateurCreatedBy()     Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur          getUtilisateurUpdatedBy()     Returns the current record's "UtilisateurUpdatedBy" value
 * @method Exploitation_interne setMontant()                  Sets the current record's "montant" value
 * @method Exploitation_interne setDateDecisionOuverture()    Sets the current record's "date_decision_ouverture" value
 * @method Exploitation_interne setDateRemiseRapport()        Sets the current record's "date_remise_rapport" value
 * @method Exploitation_interne setDateCommission()           Sets the current record's "date_commission" value
 * @method Exploitation_interne setDateDecisionRecompense()   Sets the current record's "date_decision_recompense" value
 * @method Exploitation_interne setDateVersement()            Sets the current record's "date_versement" value
 * @method Exploitation_interne setDateEnvoiLettre()          Sets the current record's "date_envoi_lettre" value
 * @method Exploitation_interne setRapporteurId()             Sets the current record's "rapporteur_id" value
 * @method Exploitation_interne setPartInventiveId()          Sets the current record's "part_inventive_id" value
 * @method Exploitation_interne setRapporteur()               Sets the current record's "Rapporteur" value
 * @method Exploitation_interne setPartInventive()            Sets the current record's "Part_inventive" value
 * @method Exploitation_interne setUtilisateurCreatedBy()     Sets the current record's "UtilisateurCreatedBy" value
 * @method Exploitation_interne setUtilisateurUpdatedBy()     Sets the current record's "UtilisateurUpdatedBy" value
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseExploitation_interne extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('exploitation_interne');
        $this->hasColumn('montant', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('date_decision_ouverture', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_remise_rapport', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_commission', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_decision_recompense', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_versement', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_envoi_lettre', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('rapporteur_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('part_inventive_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur as Rapporteur', array(
             'local' => 'rapporteur_id',
             'foreign' => 'id'));

        $this->hasOne('Part_inventive', array(
             'local' => 'part_inventive_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}