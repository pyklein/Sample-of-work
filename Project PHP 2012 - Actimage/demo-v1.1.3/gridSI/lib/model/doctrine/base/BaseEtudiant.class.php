<?php

/**
 * BaseEtudiant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $civilite_id
 * @property string $nom
 * @property string $nom_jeunefille
 * @property string $prenom
 * @property date $date_naissance
 * @property string $lieu_naissance
 * @property string $email
 * @property string $email2
 * @property string $adresse
 * @property string $adresse2
 * @property string $adresse3
 * @property string $code_postal
 * @property string $complement_adresse
 * @property integer $ville_id
 * @property string $telephone_fixe
 * @property string $telephone_mobile
 * @property string $adresse_etrangere
 * @property integer $pays_id
 * @property integer $nationalite_id
 * @property string $autre_cursus
 * @property boolean $a_master
 * @property string $mention
 * @property string $description_formation
 * @property string $photographie
 * @property string $photographie_orig
 * @property integer $type_cursus_id
 * @property boolean $est_actif
 * @property Civilite $Civilite
 * @property Utilisateur $UtilisateurCreatedBy
 * @property Utilisateur $UtilisateurUpdatedBy
 * @property Type_cursus $Type_cursus
 * @property Ville $Ville
 * @property Pays $Pays
 * @property Pays $Nationalite
 * @property Doctrine_Collection $Dossier_these
 * @property Doctrine_Collection $Dossier_ere
 * @property Doctrine_Collection $Dossier_postdoc
 * 
 * @method integer             getCiviliteId()            Returns the current record's "civilite_id" value
 * @method string              getNom()                   Returns the current record's "nom" value
 * @method string              getNomJeunefille()         Returns the current record's "nom_jeunefille" value
 * @method string              getPrenom()                Returns the current record's "prenom" value
 * @method date                getDateNaissance()         Returns the current record's "date_naissance" value
 * @method string              getLieuNaissance()         Returns the current record's "lieu_naissance" value
 * @method string              getEmail()                 Returns the current record's "email" value
 * @method string              getEmail2()                Returns the current record's "email2" value
 * @method string              getAdresse()               Returns the current record's "adresse" value
 * @method string              getAdresse2()              Returns the current record's "adresse2" value
 * @method string              getAdresse3()              Returns the current record's "adresse3" value
 * @method string              getCodePostal()            Returns the current record's "code_postal" value
 * @method string              getComplementAdresse()     Returns the current record's "complement_adresse" value
 * @method integer             getVilleId()               Returns the current record's "ville_id" value
 * @method string              getTelephoneFixe()         Returns the current record's "telephone_fixe" value
 * @method string              getTelephoneMobile()       Returns the current record's "telephone_mobile" value
 * @method string              getAdresseEtrangere()      Returns the current record's "adresse_etrangere" value
 * @method integer             getPaysId()                Returns the current record's "pays_id" value
 * @method integer             getNationaliteId()         Returns the current record's "nationalite_id" value
 * @method string              getAutreCursus()           Returns the current record's "autre_cursus" value
 * @method boolean             getAMaster()               Returns the current record's "a_master" value
 * @method string              getMention()               Returns the current record's "mention" value
 * @method string              getDescriptionFormation()  Returns the current record's "description_formation" value
 * @method string              getPhotographie()          Returns the current record's "photographie" value
 * @method string              getPhotographieOrig()      Returns the current record's "photographie_orig" value
 * @method integer             getTypeCursusId()          Returns the current record's "type_cursus_id" value
 * @method boolean             getEstActif()              Returns the current record's "est_actif" value
 * @method Civilite            getCivilite()              Returns the current record's "Civilite" value
 * @method Utilisateur         getUtilisateurCreatedBy()  Returns the current record's "UtilisateurCreatedBy" value
 * @method Utilisateur         getUtilisateurUpdatedBy()  Returns the current record's "UtilisateurUpdatedBy" value
 * @method Type_cursus         getTypeCursus()            Returns the current record's "Type_cursus" value
 * @method Ville               getVille()                 Returns the current record's "Ville" value
 * @method Pays                getPays()                  Returns the current record's "Pays" value
 * @method Pays                getNationalite()           Returns the current record's "Nationalite" value
 * @method Doctrine_Collection getDossierThese()          Returns the current record's "Dossier_these" collection
 * @method Doctrine_Collection getDossierEre()            Returns the current record's "Dossier_ere" collection
 * @method Doctrine_Collection getDossierPostdoc()        Returns the current record's "Dossier_postdoc" collection
 * @method Etudiant            setCiviliteId()            Sets the current record's "civilite_id" value
 * @method Etudiant            setNom()                   Sets the current record's "nom" value
 * @method Etudiant            setNomJeunefille()         Sets the current record's "nom_jeunefille" value
 * @method Etudiant            setPrenom()                Sets the current record's "prenom" value
 * @method Etudiant            setDateNaissance()         Sets the current record's "date_naissance" value
 * @method Etudiant            setLieuNaissance()         Sets the current record's "lieu_naissance" value
 * @method Etudiant            setEmail()                 Sets the current record's "email" value
 * @method Etudiant            setEmail2()                Sets the current record's "email2" value
 * @method Etudiant            setAdresse()               Sets the current record's "adresse" value
 * @method Etudiant            setAdresse2()              Sets the current record's "adresse2" value
 * @method Etudiant            setAdresse3()              Sets the current record's "adresse3" value
 * @method Etudiant            setCodePostal()            Sets the current record's "code_postal" value
 * @method Etudiant            setComplementAdresse()     Sets the current record's "complement_adresse" value
 * @method Etudiant            setVilleId()               Sets the current record's "ville_id" value
 * @method Etudiant            setTelephoneFixe()         Sets the current record's "telephone_fixe" value
 * @method Etudiant            setTelephoneMobile()       Sets the current record's "telephone_mobile" value
 * @method Etudiant            setAdresseEtrangere()      Sets the current record's "adresse_etrangere" value
 * @method Etudiant            setPaysId()                Sets the current record's "pays_id" value
 * @method Etudiant            setNationaliteId()         Sets the current record's "nationalite_id" value
 * @method Etudiant            setAutreCursus()           Sets the current record's "autre_cursus" value
 * @method Etudiant            setAMaster()               Sets the current record's "a_master" value
 * @method Etudiant            setMention()               Sets the current record's "mention" value
 * @method Etudiant            setDescriptionFormation()  Sets the current record's "description_formation" value
 * @method Etudiant            setPhotographie()          Sets the current record's "photographie" value
 * @method Etudiant            setPhotographieOrig()      Sets the current record's "photographie_orig" value
 * @method Etudiant            setTypeCursusId()          Sets the current record's "type_cursus_id" value
 * @method Etudiant            setEstActif()              Sets the current record's "est_actif" value
 * @method Etudiant            setCivilite()              Sets the current record's "Civilite" value
 * @method Etudiant            setUtilisateurCreatedBy()  Sets the current record's "UtilisateurCreatedBy" value
 * @method Etudiant            setUtilisateurUpdatedBy()  Sets the current record's "UtilisateurUpdatedBy" value
 * @method Etudiant            setTypeCursus()            Sets the current record's "Type_cursus" value
 * @method Etudiant            setVille()                 Sets the current record's "Ville" value
 * @method Etudiant            setPays()                  Sets the current record's "Pays" value
 * @method Etudiant            setNationalite()           Sets the current record's "Nationalite" value
 * @method Etudiant            setDossierThese()          Sets the current record's "Dossier_these" collection
 * @method Etudiant            setDossierEre()            Sets the current record's "Dossier_ere" collection
 * @method Etudiant            setDossierPostdoc()        Sets the current record's "Dossier_postdoc" collection
 * 
 * @package    gridSI
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseEtudiant extends gridDoctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('etudiant');
        $this->hasColumn('civilite_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('nom_jeunefille', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('prenom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('date_naissance', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('lieu_naissance', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('adresse', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('adresse2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('adresse3', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('code_postal', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('complement_adresse', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ville_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('telephone_fixe', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('telephone_mobile', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('adresse_etrangere', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('pays_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nationalite_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('autre_cursus', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('a_master', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('mention', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description_formation', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('photographie', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('photographie_orig', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('type_cursus_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('est_actif', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Civilite', array(
             'local' => 'civilite_id',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur as UtilisateurUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Type_cursus', array(
             'local' => 'type_cursus_id',
             'foreign' => 'id'));

        $this->hasOne('Ville', array(
             'local' => 'ville_id',
             'foreign' => 'id'));

        $this->hasOne('Pays', array(
             'local' => 'pays_id',
             'foreign' => 'id'));

        $this->hasOne('Pays as Nationalite', array(
             'local' => 'nationalite_id',
             'foreign' => 'id'));

        $this->hasMany('Dossier_these', array(
             'local' => 'id',
             'foreign' => 'realise_par'));

        $this->hasMany('Dossier_ere', array(
             'local' => 'id',
             'foreign' => 'realise_par'));

        $this->hasMany('Dossier_postdoc', array(
             'local' => 'id',
             'foreign' => 'realise_par'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}