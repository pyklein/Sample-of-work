<?php

/**
 * Type_convention_organismeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Type_convention_organismeTable extends Doctrine_Table
{

  const STAGE_POSTDOC = "1";
  const STAGE_ERE = "2";
  const THESE_COFINANCEE = "3";
  const THESE_COFINANCEE_PAR_REGION = "4";
  const THESE_COFINANCEE_PAR_INDUSTRIEL = "5";
  const THESE_NON_COFINANCEE = "6";
  const DECISION_FINANCIERE = "7";

  /**
   * Returns an instance of this class.
   *
   * @return object Type_convention_organismeTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Type_convention_organisme');
  }

  /**
   * Retrouve un tableau de type de convention en fonction de son type de dossier ,
   *  ordonné par intitulé
   *
   * @param <String> $type_dossier Type du dossier (Dossier_these, Dossier_postdoc, Dossier_ere)
   * @return DoctrineCollection
   * @author Alexandre WETTA
   */
  public function retrieveTypeConventionByTypeDossier($type_dossier) {

    if ($type_dossier == "Dossier_these") {
      $doctrineQuery = $this->createQuery('t')->where('id=?', self::THESE_COFINANCEE)
                      ->orWhere('id=?', self::THESE_COFINANCEE_PAR_REGION)
                      ->orWhere('id=?', self::THESE_COFINANCEE_PAR_INDUSTRIEL)
                      ->orWhere('id=?', self::THESE_NON_COFINANCEE)
                      ->orWhere('id=?', self::DECISION_FINANCIERE);
      $doctrineQuery->orderBy('t.intitule DESC');
    } else if ($type_dossier == "Dossier_postdoc") {
      $doctrineQuery = $this->createQuery('t')->where('id=?', self::STAGE_POSTDOC);
    } else if ($type_dossier == "Dossier_ere") {
      $doctrineQuery = $this->createQuery('t')->where('id=?', self::STAGE_ERE);
    }

    return $doctrineQuery->execute();
  }

    /**
   * Permet de construir un query qui recupere les types triés par ordre ascendant
   * de leur intitule
   *
   * @return Doctrine_Query
   *
   * @author Simeon PETEV
   */
  public function buildQueryTypesOrdreAscIntitule()
  {
    if (sfContext::hasInstance())
        sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ DEBUT; ");

    $objQuery = $this->getInstance()->getQueryObject()
                                        ->orderBy('intitule ASC')
    ;

    if (sfContext::hasInstance())
        sfContext::getInstance()->getLogger()->debug("{".__CLASS__."} [".__FUNCTION__."] /Ligne: ".__LINE__."/ FIN; ");

    return $objQuery;
  }
}