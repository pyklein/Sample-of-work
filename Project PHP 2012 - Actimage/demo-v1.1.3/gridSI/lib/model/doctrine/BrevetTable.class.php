<?php

/**
 * BrevetTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BrevetTable extends Doctrine_Table {

  /**
   * Returns an instance of this class.
   *
   * @return object BrevetTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Brevet');
  }

  /**
   * Retourne une requète pour la liste des bervets d'un dossier BPI
   *
   * @param Integer $dossierId L'id du dossier
   *
   * @return Doctrine_Query
   */
  public function retrieveBrevets($dossierId) {

    $objRequete = $this->createQuery('b')
                    ->where('b.dossier_bpi_id = ?', $dossierId)
                    ->orderBy('b.date_reference ASC');

    return $objRequete;
  }
  
  public function retrieveBrevetsParOrdreDateDepot($dossierId) {

    $objRequete = $this->createQuery('b')
                    ->where('b.dossier_bpi_id = ?', $dossierId)
                    ->orderBy('b.date_depot ASC');

    return $objRequete;
  }



  /**
   * Retourne une requète pour la liste des brevets actifs d'un dossier BPI
   * Cette fonction est utilisé pour le selectBox de création de brevet
   *
   * @param Integer $dossierId L'id du dossier
   * @param Integer $brevetId l'id du brevet (s'il y en a un)
   *
   * @return Doctrine_Query
   */
  public function retrieveBrevetsActifsByDossierBpi($dossierId, $brevetId = null) {

    //si il y a un brevetId on l'exclu de la liste
    if($brevetId == null){
    $objRequete = $this->createQuery('b')
                    ->where('b.dossier_bpi_id = ?', $dossierId)
                    ->andWhere('b.est_actif = 1');
    } else {
      $objRequete = $this->createQuery('b')
                    ->where('b.dossier_bpi_id = ?', $dossierId)
                    ->andWhere('b.est_actif = 1')
                    ->andWhereNotIn('b.id', $brevetId);
    }

    return $objRequete;
  }

  /**
   * Retourne les brevets qui déclanche des alertes
   * @param Integer $dossierId L'id du dossier
   * @param string $strDateAvant recherche avant cette date (format SQL)
   * @return Doctrine_Query
   * @author Gabor JAGER
   */
  public function retrieveBrevetsAlertes($dossierId, $strDateAvant)
  {
    $objRequete = $this->createQuery('b')
                       ->where('b.dossier_bpi_id = ?', $dossierId)
                       ->andWhere('b.est_actif = 1')
                       ->andWhere("b.date_objectif_depot < ?", $strDateAvant)
                       ->andWhere("b.date_objectif_depot IS NOT NULL")
                       ->andWhere("b.date_depot IS NULL")
                       ->orderBy("b.date_objectif_depot");

    return $objRequete;
  }

  /**
   * Permet de décider si un dossier BPI a des brevet déposé ou pas
   * @param integer $intDossierBpiId ID de dossier BPI
   * @return boolean true si le dossier a au moins d'un brevet déposé
   *                 false sinon
   * @author Gabor JAGER
   */
  public function hasBrevetDepose($intDossierBpiId)
  {
    $objRequeteDoctrine = $this->createQuery('b')
                               ->where('b.dossier_bpi_id = ?', $intDossierBpiId)
                               ->andWhere('b.date_depot <= ?', date("Y-m-d"))
            ;

    $intResultat = $objRequeteDoctrine->count();

    return $intResultat > 0 ? true : false;
  }

}