<?php

/**
 * Exploitation_interne form.
 *
 * @package    gridSI
 * @subpackage form
 * @author     Your name here
 * @version    SVN: $Id: sfDoctrineFormTemplate.php 23810 2009-11-12 11:07:44Z Kris.Wallsmith $
 */
class Exploitation_interneForm extends BaseExploitation_interneForm {

  public function configure() {
    $this->useFields(array('date_decision_ouverture', 'rapporteur_id', 'montant', 'date_remise_rapport', 'date_commission',
        'date_decision_recompense', 'date_versement', 'date_envoi_lettre'));

    //set widgets
    $this->widgetSchema['date_decision_ouverture'] = new sfWidgetFormInputJQueryDate();
    $this->widgetSchema['date_remise_rapport'] = new sfWidgetFormInputJQueryDate();
    $this->widgetSchema['date_commission'] = new sfWidgetFormInputJQueryDate();
    $this->widgetSchema['date_decision_recompense'] = new sfWidgetFormInputJQueryDate();
    $this->widgetSchema['date_versement'] = new sfWidgetFormInputJQueryDate();
    $this->widgetSchema['date_envoi_lettre'] = new sfWidgetFormInputJQueryDate();

    $this->widgetSchema['rapporteur_id'] =  new sfWidgetFormDoctrineChoice(array(
        'model' => $this->getRelatedModelName('Rapporteur'),
        'add_empty' => libelle('msg_libelle_aucun'),
        'table_method' => 'buildQueryUtilisateursActifsOrdreAscPrenomNom'
        )) ;


    //validateurs
    $this->validatorSchema['date_decision_ouverture'] = new gridValidatorDate(array('required' => false));
    $this->validatorSchema['date_remise_rapport'] = new gridValidatorDate(array('required' => false));
    $this->validatorSchema['date_commission'] = new gridValidatorDate(array('required' => false));
    $this->validatorSchema['date_decision_recompense'] = new gridValidatorDate(array('required' => false));
    $this->validatorSchema['date_versement'] = new gridValidatorDate(array('required' => false));
    $this->validatorSchema['date_envoi_lettre'] = new gridValidatorDate(array('required' => false));

    $this->validatorSchema['montant'] = new sfValidatorRegex(array('pattern' => '/^[0-9]+\.?[0-9]{0,2}$/', 'required'=>false), array('invalid'=> libelle('msg_libelle_montant_invalide')));

    //set des libellÃ©s
    $this->widgetSchema->setLabels(array(
        'date_decision_ouverture' => libelle('msg_libelle_recompenses_date_decision_ouverture'),
        'rapporteur_id' => libelle('msg_libelle_rapporteur'),
        'montant' => libelle('msg_libelle_montant'),
        'date_remise_rapport' => libelle('msg_libelle_recompenses_date_remise_rapport'),
        'date_commission' => libelle('msg_libelle_recompenses_date_commission'),
        'date_decision_recompense' => libelle('msg_libelle_recompenses_date_decision_recompense'),
        'date_versement' => libelle('msg_libelle_recompenses_date_versement'),
        'date_envoi_lettre' => libelle('msg_libelle_recompenses_date_envoi_lettre'),
    ));

    $this->disableLocalCSRFProtection();
    parent::configure();
  }

}
