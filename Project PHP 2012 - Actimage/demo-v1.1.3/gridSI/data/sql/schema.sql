CREATE TABLE aboutissement_ere (id BIGINT AUTO_INCREMENT, reception_rapport_final DATE, reception_fiche_evaluation DATE, reception_synthese DATE, dossier_ere_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_ere_id_idx (dossier_ere_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE aboutissement_postdoc (id BIGINT AUTO_INCREMENT, reception_rapport_final DATE, reception_fiche_evaluation DATE, reception_synthese DATE, dossier_postdoc_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE aboutissement_these (id BIGINT AUTO_INCREMENT, est_preselectionne_prix TINYINT(1) DEFAULT '0' NOT NULL, est_selectionne_prix TINYINT(1) DEFAULT '0' NOT NULL, reception_exemplaire_these DATE, reception_rapport_soutenance DATE, reception_liste_publication DATE, reception_fiche_evaluation DATE, reception_synthese DATE, date_soutenance DATE, dossier_these_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_these_id_idx (dossier_these_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE action (id BIGINT AUTO_INCREMENT, date_echeance DATE, description TEXT, date_action DATE, pilote_id BIGINT NOT NULL, statut_action_id BIGINT NOT NULL, type_action_id BIGINT NOT NULL, dossier_bpi_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX statut_action_id_idx (statut_action_id), INDEX type_action_id_idx (type_action_id), INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX pilote_id_idx (pilote_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE alerte_bpi (id BIGINT AUTO_INCREMENT, type_alerte_bpi_id BIGINT NOT NULL, date_alerte DATE NOT NULL, date_echeance DATE NOT NULL, dossier_bpi_id BIGINT NOT NULL, brevet_id BIGINT, action_id BIGINT, deja_passe TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_alerte_bpi_id_idx (type_alerte_bpi_id), INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX brevet_id_idx (brevet_id), INDEX action_id_idx (action_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE attribution_droit (id BIGINT AUTO_INCREMENT, echeance_supplementaire DATE, droits_attribues TINYINT(1) DEFAULT '0' NOT NULL, date_decision_attribution DATE, commentaire TEXT, date_envoi_contrat DATE, redaction_brevet_lance TINYINT(1) DEFAULT '0' NOT NULL, contrat_id BIGINT, brevet_id BIGINT, dossier_bpi_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX contrat_id_idx (contrat_id), INDEX brevet_id_idx (brevet_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_bpi_id_idx (dossier_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE avis_etatmajor (id BIGINT AUTO_INCREMENT, date_demande DATETIME, reference_demande VARCHAR(255), date_reception DATETIME, date_envoi DATETIME, reference VARCHAR(255), est_favorable TINYINT(1), recommandation TEXT, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE avis_mris (id BIGINT AUTO_INCREMENT, date_avis DATE, date_envoi_lettre DATE, est_satisfaisant TINYINT(1) DEFAULT '0' NOT NULL, dossier_these_id BIGINT, dossier_ere_id BIGINT, dossier_postdoc_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE avis_mris_dossier_ere (avis_mris_id BIGINT, dossier_ere_id BIGINT, PRIMARY KEY(avis_mris_id, dossier_ere_id)) ENGINE = INNODB;
CREATE TABLE avis_mris_dossier_postdoc (avis_mris_id BIGINT, dossier_postdoc_id BIGINT, PRIMARY KEY(avis_mris_id, dossier_postdoc_id)) ENGINE = INNODB;
CREATE TABLE avis_mris_dossier_these (avis_mris_id BIGINT, dossier_these_id BIGINT, PRIMARY KEY(avis_mris_id, dossier_these_id)) ENGINE = INNODB;
CREATE TABLE brevet (id BIGINT AUTO_INCREMENT, numero_demande VARCHAR(255), numero_publication VARCHAR(255), titre VARCHAR(255), date_decision_depot DATE, date_objectif_depot DATE, date_depot DATE, date_rapport_recherche DATE, date_obtention DATE, date_rejet DATE, date_cession DATE, date_reference DATE, somme_frais FLOAT(18, 2), parent_id BIGINT, contrat_id BIGINT, pays_id BIGINT, type_depot_id BIGINT NOT NULL, dossier_bpi_id BIGINT NOT NULL, responsable_id BIGINT NOT NULL, phase_depot_brevet_id BIGINT NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX parent_id_idx (parent_id), INDEX pays_id_idx (pays_id), INDEX contrat_id_idx (contrat_id), INDEX type_depot_id_idx (type_depot_id), INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX phase_depot_brevet_id_idx (phase_depot_brevet_id), INDEX responsable_id_idx (responsable_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE budget (id BIGINT AUTO_INCREMENT, date_budget DATE NOT NULL, budget_type_id BIGINT NOT NULL, dossier_mip_id BIGINT NOT NULL, reference VARCHAR(255), montant FLOAT(18, 2) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX budget_type_id_idx (budget_type_id), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE budget_type (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, est_negatif TINYINT(1) DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE civilite (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE classement (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE classement_invention_inventeur (id BIGINT AUTO_INCREMENT, dossier_bpi_id BIGINT NOT NULL, concerne_id BIGINT NOT NULL, classement_autorite_id BIGINT NOT NULL, classement_hierarchie_id BIGINT NOT NULL, classement_propose_id BIGINT NOT NULL, classement_final_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX classement_autorite_id_idx (classement_autorite_id), INDEX classement_hierarchie_id_idx (classement_hierarchie_id), INDEX classement_propose_id_idx (classement_propose_id), INDEX classement_final_id_idx (classement_final_id), INDEX concerne_id_idx (concerne_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cofinance_these (id BIGINT AUTO_INCREMENT, dossier_these_id BIGINT NOT NULL, organisme_id BIGINT NOT NULL, part_cofinance BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_these_id_idx (dossier_these_id), INDEX organisme_id_idx (organisme_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE commission (id BIGINT AUTO_INCREMENT, ordre_jour VARCHAR(255), est_selection TINYINT(1) DEFAULT '0' NOT NULL, est_suivi TINYINT(1) DEFAULT '0' NOT NULL, est_analyse TINYINT(1) DEFAULT '0' NOT NULL, date_debut DATETIME, date_fin DATETIME, est_actif TINYINT(1) DEFAULT '1' NOT NULL, type_dossier_mris_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_dossier_mris_id_idx (type_dossier_mris_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE commission_intervenant (commission_id BIGINT, intervenant_id BIGINT, PRIMARY KEY(commission_id, intervenant_id)) ENGINE = INNODB;
CREATE TABLE commission_utilisateur (commission_id BIGINT, utilisateur_id BIGINT, PRIMARY KEY(commission_id, utilisateur_id)) ENGINE = INNODB;
CREATE TABLE connexion (id BIGINT AUTO_INCREMENT, date_debut DATE NOT NULL, compteur BIGINT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contact_se (id BIGINT AUTO_INCREMENT, nom VARCHAR(255), prenom VARCHAR(255), email VARCHAR(255) NOT NULL, telephone VARCHAR(255), fax VARCHAR(20), adresse VARCHAR(255), code_postal VARCHAR(5), complement_adresse VARCHAR(255), information_libre TEXT, ville_id BIGINT, entite_id BIGINT NOT NULL, metier_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX metier_id_idx (metier_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX ville_id_idx (ville_id), INDEX entite_id_idx (entite_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contentieux (id BIGINT AUTO_INCREMENT, part_inventive_id BIGINT NOT NULL, type_contentieux_id BIGINT NOT NULL, est_desaccord TINYINT(1) DEFAULT '0' NOT NULL, commentaire_desaccord TEXT, date_demande_cnis DATE, date_cnis DATE, decision_cnis TEXT, date_accord DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX part_inventive_id_idx (part_inventive_id), INDEX type_contentieux_id_idx (type_contentieux_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contrat (id BIGINT AUTO_INCREMENT, date_proposition DATE, date_signature DATE, date_inscription_mb DATE, numero_mb VARCHAR(255), date_redaction DATE, est_actif TINYINT(1) DEFAULT '1' NOT NULL, juriste_id BIGINT, statut_contrat_id BIGINT NOT NULL, dossier_bpi_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX juriste_id_idx (juriste_id), INDEX statut_contrat_id_idx (statut_contrat_id), INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contrat_type_contrat (contrat_id BIGINT, type_contrat_id BIGINT, PRIMARY KEY(contrat_id, type_contrat_id)) ENGINE = INNODB;
CREATE TABLE convention_dossier_ere (id BIGINT AUTO_INCREMENT, numero_convention VARCHAR(255), type_convention_organisme_id BIGINT, dossier_ere_id BIGINT NOT NULL, montant BIGINT, date_signature DATE, date_notification DATE, date_prise_effet DATE NOT NULL, date_fin_effet DATE, date_archivage DATE, fichier VARCHAR(255), fichier_orig VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_convention_organisme_id_idx (type_convention_organisme_id), INDEX dossier_ere_id_idx (dossier_ere_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE convention_dossier_postdoc (id BIGINT AUTO_INCREMENT, numero_convention VARCHAR(255), type_convention_organisme_id BIGINT, dossier_postdoc_id BIGINT NOT NULL, montant BIGINT, date_signature DATE, date_notification DATE, date_prise_effet DATE NOT NULL, date_fin_effet DATE, date_archivage DATE, fichier VARCHAR(255), fichier_orig VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_convention_organisme_id_idx (type_convention_organisme_id), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE convention_dossier_these (id BIGINT AUTO_INCREMENT, numero_convention VARCHAR(255), type_convention_organisme_id BIGINT, dossier_these_id BIGINT NOT NULL, montant BIGINT, date_signature DATE, date_notification DATE, date_prise_effet DATE NOT NULL, date_fin_effet DATE, date_archivage DATE, fichier VARCHAR(255), fichier_orig VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_convention_organisme_id_idx (type_convention_organisme_id), INDEX dossier_these_id_idx (dossier_these_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE convention_organisme (id BIGINT AUTO_INCREMENT, numero_convention VARCHAR(255), type_convention_organisme_id BIGINT NOT NULL, organisme_id BIGINT NOT NULL, montant BIGINT NOT NULL, date_signature DATE, date_notification DATE, date_prise_effet DATE NOT NULL, date_fin_effet DATE, date_archivage DATE, fichier VARCHAR(255), fichier_orig VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_convention_organisme_id_idx (type_convention_organisme_id), INDEX organisme_id_idx (organisme_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE departement (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, code_departemental VARCHAR(3) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, region_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX region_id_idx (region_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE document_mris (id BIGINT AUTO_INCREMENT, fichier VARCHAR(255), fichier_orig VARCHAR(255), est_joint TINYINT(1) DEFAULT '0' NOT NULL, titre VARCHAR(255), autre_type VARCHAR(255), dossier_these_id BIGINT, dossier_ere_id BIGINT, dossier_postdoc_id BIGINT, type_document_these_id BIGINT, type_document_ere_id BIGINT, type_document_postdoc_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_these_id_idx (dossier_these_id), INDEX dossier_ere_id_idx (dossier_ere_id), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX type_document_these_id_idx (type_document_these_id), INDEX type_document_ere_id_idx (type_document_ere_id), INDEX type_document_postdoc_id_idx (type_document_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE documents_bpi (id BIGINT AUTO_INCREMENT, fichier VARCHAR(255) NOT NULL, fichier_orig VARCHAR(255), titre VARCHAR(255), est_joint TINYINT(1) DEFAULT '0' NOT NULL, est_invisible TINYINT(1) DEFAULT '0' NOT NULL, dossier_bpi_id BIGINT NOT NULL, statut_dossier_bpi_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX statut_dossier_bpi_id_idx (statut_dossier_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE documents_mip (id BIGINT AUTO_INCREMENT, fichier VARCHAR(255) NOT NULL, fichier_orig VARCHAR(255), titre VARCHAR(255), est_joint TINYINT(1), autre_type VARCHAR(255), dossier_mip_id BIGINT NOT NULL, documents_mip_type_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), INDEX documents_mip_type_id_idx (documents_mip_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE documents_mip_type (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE domaine_scientifique (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_bpi (id BIGINT AUTO_INCREMENT, titre VARCHAR(255) NOT NULL, description TEXT, date_predeclaration DATE, date_declaration_conforme DATE, est_brevetable TINYINT(1) DEFAULT '0' NOT NULL, numero VARCHAR(255), est_actif TINYINT(1) DEFAULT '1' NOT NULL, est_clos TINYINT(1) DEFAULT '0' NOT NULL, date_cloture DATE, commentaire_cloture TEXT, date_reouverture DATE, commentaire_reouverture TEXT, autorite_decision_id BIGINT, hierarchie_locale_id BIGINT, etat_partage_id BIGINT DEFAULT 1 NOT NULL, statut_declaration_id BIGINT NOT NULL, statut_dossier_bpi_id BIGINT NOT NULL, date_classement DATE, date_classement_cnis DATE, commentaire_classement TEXT, repertoire_partage VARCHAR(255) NOT NULL, est_classifie TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX autorite_decision_id_idx (autorite_decision_id), INDEX hierarchie_locale_id_idx (hierarchie_locale_id), INDEX etat_partage_id_idx (etat_partage_id), INDEX statut_declaration_id_idx (statut_declaration_id), INDEX statut_dossier_bpi_id_idx (statut_dossier_bpi_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_ere (id BIGINT AUTO_INCREMENT, numero_provisoire VARCHAR(255), numero_definitif VARCHAR(255), titre VARCHAR(255) NOT NULL, objet TEXT, fichier_editable VARCHAR(255), fichier_editable_orig VARCHAR(255), fichier_pdf VARCHAR(255), fichier_pdf_orig VARCHAR(255), classement BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, cotutelle TINYINT(1) DEFAULT '0', cooperation TINYINT(1) DEFAULT '0', statut_dossier_ere_id BIGINT, domaine_scientifique_id BIGINT, organisme_mindef_id BIGINT, organisme_id BIGINT, realise_par BIGINT, pilote_par BIGINT, etat_partage_id BIGINT DEFAULT 1, mis_en_attente_le DATETIME, repertoire_partage VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX statut_dossier_ere_id_idx (statut_dossier_ere_id), INDEX domaine_scientifique_id_idx (domaine_scientifique_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX organisme_id_idx (organisme_id), INDEX etat_partage_id_idx (etat_partage_id), INDEX realise_par_idx (realise_par), INDEX pilote_par_idx (pilote_par), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_ere_laboratoire (id BIGINT AUTO_INCREMENT, dossier_ere_id BIGINT NOT NULL, laboratoire_id BIGINT NOT NULL, INDEX dossier_ere_id_idx (dossier_ere_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_mip (id BIGINT AUTO_INCREMENT, numero VARCHAR(255), titre VARCHAR(255) NOT NULL, acronyme VARCHAR(255), descriptif TEXT, etat_partage_id BIGINT, est_publie TINYINT(1) DEFAULT '0', photographie VARCHAR(255), photographie_orig VARCHAR(255), repertoire_partage VARCHAR(255) NOT NULL, statut_dossier_mip_id BIGINT, niveau_protection_id BIGINT, pilote_id BIGINT, organisme_mindef_id BIGINT NOT NULL, statut_projet_mip_id BIGINT DEFAULT 0 NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, necessite_controle INT DEFAULT 2 NOT NULL, date_bascule DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX etat_partage_id_idx (etat_partage_id), INDEX statut_projet_mip_id_idx (statut_projet_mip_id), INDEX statut_dossier_mip_id_idx (statut_dossier_mip_id), INDEX niveau_protection_id_idx (niveau_protection_id), INDEX pilote_id_idx (pilote_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_mip_dossier_bpi (dossier_mip_id BIGINT, dossier_bpi_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(dossier_mip_id, dossier_bpi_id)) ENGINE = INNODB;
CREATE TABLE dossier_postdoc (id BIGINT AUTO_INCREMENT, numero_provisoire VARCHAR(255), numero_definitif VARCHAR(255), titre VARCHAR(255) NOT NULL, objet TEXT, fichier_editable VARCHAR(255), fichier_editable_orig VARCHAR(255), fichier_pdf VARCHAR(255), fichier_pdf_orig VARCHAR(255), classement BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, cotutelle TINYINT(1) DEFAULT '0', cooperation TINYINT(1) DEFAULT '0', statut_dossier_postdoc_id BIGINT, domaine_scientifique_id BIGINT, organisme_mindef_id BIGINT, organisme_id BIGINT, realise_par BIGINT, pilote_par BIGINT, etat_partage_id BIGINT DEFAULT 1, mis_en_attente_le DATETIME, repertoire_partage VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX statut_dossier_postdoc_id_idx (statut_dossier_postdoc_id), INDEX domaine_scientifique_id_idx (domaine_scientifique_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX organisme_id_idx (organisme_id), INDEX etat_partage_id_idx (etat_partage_id), INDEX realise_par_idx (realise_par), INDEX pilote_par_idx (pilote_par), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_postdoc_laboratoire (dossier_postdoc_id BIGINT, laboratoire_id BIGINT, PRIMARY KEY(dossier_postdoc_id, laboratoire_id)) ENGINE = INNODB;
CREATE TABLE dossier_these (id BIGINT AUTO_INCREMENT, numero VARCHAR(255) NOT NULL, titre VARCHAR(255) NOT NULL, objet VARCHAR(255), fichier_editable VARCHAR(255), fichier_editable_orig VARCHAR(255), fichier_pdf VARCHAR(255), fichier_pdf_orig VARCHAR(255), classement BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, cotutelle TINYINT(1) DEFAULT '0', cooperation TINYINT(1) DEFAULT '0', statut_dossier_these_id BIGINT, domaine_scientifique_id BIGINT, organisme_mindef_id BIGINT, organisme_id BIGINT, realise_par BIGINT, pilote_par BIGINT, etat_partage_id BIGINT DEFAULT 1, type_convention_organisme_id BIGINT NOT NULL, mis_en_attente_le DATETIME, repertoire_partage VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX statut_dossier_these_id_idx (statut_dossier_these_id), INDEX domaine_scientifique_id_idx (domaine_scientifique_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX organisme_id_idx (organisme_id), INDEX etat_partage_id_idx (etat_partage_id), INDEX realise_par_idx (realise_par), INDEX type_convention_organisme_id_idx (type_convention_organisme_id), INDEX pilote_par_idx (pilote_par), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dossier_these_laboratoire (id BIGINT AUTO_INCREMENT, dossier_these_id BIGINT NOT NULL, laboratoire_id BIGINT NOT NULL, INDEX dossier_these_id_idx (dossier_these_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE echeance (id BIGINT AUTO_INCREMENT, date_echeance_ea DATETIME, date_echeance_cr DATETIME, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE echec_authentification (id BIGINT AUTO_INCREMENT, utilisateur_id BIGINT, compeur_connection BIGINT NOT NULL, info_supplementaire TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX utilisateur_id_idx (utilisateur_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE encadrant_ere (id BIGINT AUTO_INCREMENT, dossier_ere_id BIGINT, intervenant_id BIGINT, role_ere_id BIGINT, PRIMARY KEY(id, dossier_ere_id, intervenant_id, role_ere_id)) ENGINE = INNODB;
CREATE TABLE encadrant_postdoc (id BIGINT AUTO_INCREMENT, dossier_postdoc_id BIGINT, intervenant_id BIGINT, role_postdoc_id BIGINT, PRIMARY KEY(id, dossier_postdoc_id, intervenant_id, role_postdoc_id)) ENGINE = INNODB;
CREATE TABLE encadrant_these (id BIGINT AUTO_INCREMENT, dossier_these_id BIGINT, intervenant_id BIGINT, role_these_id BIGINT, PRIMARY KEY(id, dossier_these_id, intervenant_id, role_these_id)) ENGINE = INNODB;
CREATE TABLE engagement (id BIGINT AUTO_INCREMENT, type_engagement_id BIGINT NOT NULL, date_engagement DATE NOT NULL, montant FLOAT(18, 2) NOT NULL, reference VARCHAR(255), entite_id BIGINT NOT NULL, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX type_engagement_id_idx (type_engagement_id), INDEX dossier_mip_id_idx (dossier_mip_id), INDEX entite_id_idx (entite_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE entite (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, ville_id BIGINT, organisme_mindef_id BIGINT NOT NULL, entite_id BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, parents VARCHAR(255), parents_arbo VARCHAR(255), est_executant TINYINT(1) NOT NULL, code_executant VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX ville_id_idx (ville_id), INDEX entite_id_idx (entite_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE etat_partage (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE etudiant (id BIGINT AUTO_INCREMENT, civilite_id BIGINT NOT NULL, nom VARCHAR(255) NOT NULL, nom_jeunefille VARCHAR(255), prenom VARCHAR(255) NOT NULL, date_naissance DATE, lieu_naissance VARCHAR(255), email VARCHAR(255) NOT NULL, adresse VARCHAR(255), code_postal VARCHAR(255), complement_adresse VARCHAR(255), ville_id BIGINT, telephone_fixe VARCHAR(20), telephone_mobile VARCHAR(20), adresse_etrangere TEXT, pays_id BIGINT, autre_cursus VARCHAR(255), a_master TINYINT(1) DEFAULT '0' NOT NULL, mention VARCHAR(255), description_formation TEXT, photographie VARCHAR(255), photographie_orig VARCHAR(255), type_cursus_id BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX civilite_id_idx (civilite_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX type_cursus_id_idx (type_cursus_id), INDEX ville_id_idx (ville_id), INDEX pays_id_idx (pays_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE evaluation (id BIGINT AUTO_INCREMENT, note_id BIGINT, valeur_note_id BIGINT, est_preselection TINYINT(1) DEFAULT '0' NOT NULL, est_globale TINYINT(1) DEFAULT '0' NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, est_finale TINYINT(1) DEFAULT '0' NOT NULL, invitation_id BIGINT, dossier_these_id BIGINT, dossier_ere_id BIGINT, dossier_postdoc_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX note_id_idx (note_id), INDEX valeur_note_id_idx (valeur_note_id), INDEX invitation_id_idx (invitation_id), INDEX dossier_these_id_idx (dossier_these_id), INDEX dossier_ere_id_idx (dossier_ere_id), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE evenement_mip (id BIGINT AUTO_INCREMENT, date DATETIME NOT NULL, evenement TEXT NOT NULL, est_cloture TINYINT(1) DEFAULT '0' NOT NULL, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE evenement_mris (id BIGINT AUTO_INCREMENT, date_evenement DATE NOT NULL, description TEXT NOT NULL, dossier_these_id BIGINT, dossier_ere_id BIGINT, dossier_postdoc_id BIGINT, type_evenement_these_id BIGINT, type_evenement_ere_id BIGINT, type_evenement_postdoc_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_these_id_idx (dossier_these_id), INDEX dossier_ere_id_idx (dossier_ere_id), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX type_evenement_these_id_idx (type_evenement_these_id), INDEX type_evenement_ere_id_idx (type_evenement_ere_id), INDEX type_evenement_postdoc_id_idx (type_evenement_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE exploitation_bpi (id BIGINT AUTO_INCREMENT, est_par_inventeur TINYINT(1) DEFAULT '0' NOT NULL, nature_interne_id BIGINT NOT NULL, nature_externe_id BIGINT NOT NULL, dossier_bpi_id BIGINT NOT NULL, INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX nature_interne_id_idx (nature_interne_id), INDEX nature_externe_id_idx (nature_externe_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE exploitation_externe (id BIGINT AUTO_INCREMENT, montant FLOAT(18, 2), redevance_id BIGINT NOT NULL, date_versement DATE, part_inventive_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX part_inventive_id_idx (part_inventive_id), INDEX redevance_id_idx (redevance_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE exploitation_interne (id BIGINT AUTO_INCREMENT, montant FLOAT(18, 2), date_decision_ouverture DATE, date_remise_rapport DATE, date_commission DATE, date_decision_recompense DATE, date_versement DATE, date_envoi_lettre DATE, rapporteur_id BIGINT, part_inventive_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX rapporteur_id_idx (rapporteur_id), INDEX part_inventive_id_idx (part_inventive_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE financement (id BIGINT AUTO_INCREMENT, budget_type_id BIGINT NOT NULL, date_financement DATE NOT NULL, montant FLOAT(18, 2) NOT NULL, reference VARCHAR(255), entite_id BIGINT NOT NULL, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX budget_type_id_idx (budget_type_id), INDEX dossier_mip_id_idx (dossier_mip_id), INDEX entite_id_idx (entite_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ftp_dossier_recupere (id BIGINT AUTO_INCREMENT, nom_dossier_recupere VARCHAR(255) NOT NULL, date_debut DATETIME, date_fin DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ftp_recuperation (id BIGINT AUTO_INCREMENT, nom_dossier VARCHAR(255) NOT NULL, date_debut DATETIME, date_fin DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE grade (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, organisme_mindef_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE innovateur_dossier_mip (dossier_mip_id BIGINT, utilisateur_id BIGINT, type_innovateur_id BIGINT NOT NULL, INDEX type_innovateur_id_idx (type_innovateur_id), PRIMARY KEY(dossier_mip_id, utilisateur_id)) ENGINE = INNODB;
CREATE TABLE intervenant (id BIGINT AUTO_INCREMENT, civilite_id BIGINT NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, titre VARCHAR(255), est_participant_commission TINYINT(1) DEFAULT '0' NOT NULL, est_responsable TINYINT(1) DEFAULT '0' NOT NULL, email VARCHAR(255) NOT NULL, adresse VARCHAR(255), code_postal VARCHAR(255), complement_adresse VARCHAR(255), ville_id BIGINT, telephone_fixe VARCHAR(20), telephone_mobile VARCHAR(20), fax VARCHAR(20), est_actif TINYINT(1) DEFAULT '1' NOT NULL, adresse_etrangere TEXT, pays_id BIGINT, organisme_id BIGINT, service_id BIGINT, laboratoire_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX civilite_id_idx (civilite_id), INDEX laboratoire_id_idx (laboratoire_id), INDEX organisme_id_idx (organisme_id), INDEX service_id_idx (service_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX ville_id_idx (ville_id), INDEX pays_id_idx (pays_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE inventeur (id BIGINT AUTO_INCREMENT, civilite_id BIGINT NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, date_naissance DATE, date_deces DATE, date_retraite DATE, email VARCHAR(255) NOT NULL, telephone_fixe VARCHAR(20), telephone_mobile VARCHAR(20), telephone_autre VARCHAR(20), fax VARCHAR(20), email_perso VARCHAR(255), adresse_perso VARCHAR(255), code_postal_perso VARCHAR(255), complement_adresse_perso VARCHAR(255), ville_id BIGINT, telephone_fixe_perso VARCHAR(20), telephone_mobile_perso VARCHAR(20), est_exterieur TINYINT(1) DEFAULT '0' NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, organisme_mindef_id BIGINT, entite_id BIGINT, grade_id BIGINT, organisme_id BIGINT, service_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX civilite_id_idx (civilite_id), INDEX ville_id_idx (ville_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX entite_id_idx (entite_id), INDEX grade_id_idx (grade_id), INDEX organisme_id_idx (organisme_id), INDEX service_id_idx (service_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE invitation (id BIGINT AUTO_INCREMENT, commission_id BIGINT, service_id BIGINT, laboratoire_id BIGINT, INDEX commission_id_idx (commission_id), INDEX service_id_idx (service_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE laboratoire (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, intitule_ancien VARCHAR(255), abreviation VARCHAR(255), est_actif TINYINT(1) DEFAULT '1' NOT NULL, service_id BIGINT, organisme_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX service_id_idx (service_id), INDEX organisme_id_idx (organisme_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE liaison_mip_bpi (dossier_mip_id BIGINT, dossier_bpi_id BIGINT, PRIMARY KEY(dossier_mip_id, dossier_bpi_id)) ENGINE = INNODB;
CREATE TABLE libelle_organisme (id BIGINT AUTO_INCREMENT, libelle_simple VARCHAR(255), libelle_liste VARCHAR(255), metier_id BIGINT NOT NULL, organisme_mindef_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX metier_id_idx (metier_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mail (id BIGINT AUTO_INCREMENT, sujet VARCHAR(255) NOT NULL, message TEXT NOT NULL, destinataire VARCHAR(255) NOT NULL, statut_id BIGINT DEFAULT 1 NOT NULL, nombre_tentative BIGINT NOT NULL, date_envoi DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX statut_id_idx (statut_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mail_statut (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE metier (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, est_administrateur TINYINT(1) DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mode_transmission (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE modele_lettre (cle VARCHAR(255), fichier VARCHAR(255), fichier_orig VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(cle)) ENGINE = INNODB;
CREATE TABLE nature_exploitation (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE niveau_protection (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE note (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, est_selection TINYINT(1) DEFAULT '1' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE notification (id BIGINT AUTO_INCREMENT, metier_id BIGINT NOT NULL, contenu TEXT NOT NULL, date_debut DATETIME NOT NULL, date_fin DATETIME NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX metier_id_idx (metier_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organisme (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, intitule_ancien VARCHAR(255), abreviation VARCHAR(255), est_actif TINYINT(1) DEFAULT '1' NOT NULL, type_organisme_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX type_organisme_id_idx (type_organisme_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organisme_mindef (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, code VARCHAR(255) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE paiement (id BIGINT AUTO_INCREMENT, date_paiement DATE NOT NULL, montant FLOAT(18, 2) NOT NULL, reference VARCHAR(255), entite_id BIGINT NOT NULL, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), INDEX entite_id_idx (entite_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE part_inventive (id BIGINT AUTO_INCREMENT, inventeur_id BIGINT NOT NULL, dossier_bpi_id BIGINT NOT NULL, part_inventive BIGINT, INDEX inventeur_id_idx (inventeur_id), INDEX dossier_bpi_id_idx (dossier_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pays (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE phase_depot_brevet (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, est_actif_pere TINYINT(1) DEFAULT '1' NOT NULL, phase_depot_brevet_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX phase_depot_brevet_id_idx (phase_depot_brevet_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE point_contact (id BIGINT AUTO_INCREMENT, email VARCHAR(255), telephone VARCHAR(20), fax VARCHAR(20), adresse VARCHAR(255), complement_adresse VARCHAR(255), ville_id BIGINT, code_postal VARCHAR(5), adresse_etrangere TEXT, pays_id BIGINT, metier_id BIGINT NOT NULL, organisme_id BIGINT, laboratoire_id BIGINT, service_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX ville_id_idx (ville_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX metier_id_idx (metier_id), INDEX organisme_id_idx (organisme_id), INDEX laboratoire_id_idx (laboratoire_id), INDEX service_id_idx (service_id), INDEX pays_id_idx (pays_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE prix (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE prix_dossier_mip (id BIGINT AUTO_INCREMENT, annee BIGINT NOT NULL, est_selectionne TINYINT(1) DEFAULT '0' NOT NULL, est_obtenu TINYINT(1) DEFAULT '0' NOT NULL, dossier_mip_id BIGINT NOT NULL, prix_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), INDEX prix_id_idx (prix_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profil (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, code VARCHAR(255) NOT NULL, metier_id BIGINT NOT NULL, priorite BIGINT NOT NULL, INDEX metier_id_idx (metier_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE recompenses (id BIGINT AUTO_INCREMENT, date_versement_20 DATE, date_versement_80 DATE, date_decision_recompense DATE, part_inventive_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX part_inventive_id_idx (part_inventive_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE redevance (id BIGINT AUTO_INCREMENT, montant FLOAT(18, 2), date_versement DATE, dossier_bpi_id BIGINT NOT NULL, contrat_id BIGINT, type_redevance_id BIGINT NOT NULL, organisme_id BIGINT NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX contrat_id_idx (contrat_id), INDEX type_redevance_id_idx (type_redevance_id), INDEX organisme_id_idx (organisme_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE region (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE relance_dossier_mip (id BIGINT AUTO_INCREMENT, dossier_mip_id BIGINT NOT NULL, type_relance_dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX type_relance_dossier_mip_id_idx (type_relance_dossier_mip_id), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE remarque_bpi (id BIGINT AUTO_INCREMENT, contenu TEXT NOT NULL, dossier_bpi_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE remarque_mip (id BIGINT AUTO_INCREMENT, contenu TEXT NOT NULL, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE remarque_mris (id BIGINT AUTO_INCREMENT, contenu TEXT, dossier_these_id BIGINT, dossier_ere_id BIGINT, dossier_postdoc_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_these_id_idx (dossier_these_id), INDEX dossier_ere_id_idx (dossier_ere_id), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE remise_documents (id BIGINT AUTO_INCREMENT, date_reception_ea DATETIME, reference_ea VARCHAR(255), date_envoi_ar_ea DATETIME, reference_ar_ea VARCHAR(255), mode_transmission_ea BIGINT, date_reception_cr DATETIME, reference_cr VARCHAR(255), date_envoi_ar_cr DATETIME, reference_ar_cr VARCHAR(255), mode_transmission_cr BIGINT, date_reception_video DATETIME, reference_video VARCHAR(255), date_envoi_ar_video DATETIME, reference_ar_video VARCHAR(255), mode_transmission_video BIGINT, date_soutien DATETIME, reference_soutien BIGINT, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX mode_transmission_ea_idx (mode_transmission_ea), INDEX mode_transmission_cr_idx (mode_transmission_cr), INDEX mode_transmission_video_idx (mode_transmission_video), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE rendez_vous (id BIGINT AUTO_INCREMENT, date_prise_rdv DATETIME, date_rdv DATETIME, dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role_ere (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role_postdoc (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE role_these (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE service (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, intitule_ancien VARCHAR(255), abreviation VARCHAR(255), est_actif TINYINT(1) DEFAULT '1' NOT NULL, organisme_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX organisme_id_idx (organisme_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_cofinance_these (id BIGINT AUTO_INCREMENT, dossier_these_id BIGINT, organisme_id BIGINT, transaction_token VARCHAR(20) NOT NULL, part_cofinance BIGINT NOT NULL, INDEX dossier_these_id_idx (dossier_these_id), INDEX organisme_id_idx (organisme_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_contrat_signataire (id BIGINT AUTO_INCREMENT, contrat_id BIGINT, organisme_id BIGINT, service_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX contrat_id_idx (contrat_id), INDEX organisme_id_idx (organisme_id), INDEX service_id_idx (service_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_dossier_ere_laboratoire (id BIGINT AUTO_INCREMENT, dossier_ere_id BIGINT, laboratoire_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX dossier_ere_id_idx (dossier_ere_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_dossier_postdoc_laboratoire (id BIGINT AUTO_INCREMENT, dossier_postdoc_id BIGINT, laboratoire_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_dossier_these_laboratoire (id BIGINT AUTO_INCREMENT, dossier_these_id BIGINT, laboratoire_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX dossier_these_id_idx (dossier_these_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_encadrants_dossier_ere (id BIGINT AUTO_INCREMENT, dossier_ere_id BIGINT, intervenant_id BIGINT, role_ere_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX dossier_ere_id_idx (dossier_ere_id), INDEX intervenant_id_idx (intervenant_id), INDEX role_ere_id_idx (role_ere_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_encadrants_dossier_postdoc (id BIGINT AUTO_INCREMENT, dossier_postdoc_id BIGINT, intervenant_id BIGINT, role_postdoc_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX intervenant_id_idx (intervenant_id), INDEX role_postdoc_id_idx (role_postdoc_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_encadrants_dossier_these (id BIGINT AUTO_INCREMENT, dossier_these_id BIGINT, intervenant_id BIGINT, role_these_id BIGINT, transaction_token VARCHAR(20) NOT NULL, INDEX dossier_these_id_idx (dossier_these_id), INDEX intervenant_id_idx (intervenant_id), INDEX role_these_id_idx (role_these_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_innovateur_dossier_mip (id BIGINT AUTO_INCREMENT, innovateur_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, nouveau_type_id BIGINT, INDEX innovateur_id_idx (innovateur_id), INDEX nouveau_type_id_idx (nouveau_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_invitation_commission (id BIGINT AUTO_INCREMENT, invitation_id BIGINT, service_id BIGINT, laboratoire_id BIGINT, transaction_token VARCHAR(20) NOT NULL, est_concerne TINYINT(1) NOT NULL, INDEX invitation_id_idx (invitation_id), INDEX service_id_idx (service_id), INDEX laboratoire_id_idx (laboratoire_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_liaison_dossiers_bpi_mip (id BIGINT AUTO_INCREMENT, dossier_mip_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, est_concerne TINYINT(1) NOT NULL, INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_liaison_dossiers_mip_bpi (id BIGINT AUTO_INCREMENT, dossier_bpi_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, est_concerne TINYINT(1) NOT NULL, INDEX dossier_bpi_id_idx (dossier_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_participant_exterieurs_commission (id BIGINT AUTO_INCREMENT, intervenant_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, est_concerne TINYINT(1) NOT NULL, INDEX intervenant_id_idx (intervenant_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_participant_mindef_commission (id BIGINT AUTO_INCREMENT, participant_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, est_concerne TINYINT(1) NOT NULL, INDEX participant_id_idx (participant_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_situation_inventeurs (id BIGINT AUTO_INCREMENT, inventeur_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, part_inventive BIGINT NOT NULL, INDEX inventeur_id_idx (inventeur_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_valorisation_externe (id BIGINT AUTO_INCREMENT, contrat_id BIGINT, organisme_id BIGINT NOT NULL, statut_valorisation_externe_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, INDEX contrat_id_idx (contrat_id), INDEX organisme_id_idx (organisme_id), INDEX statut_valorisation_externe_id_idx (statut_valorisation_externe_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session_valorisation_interne (id BIGINT AUTO_INCREMENT, organisme_mindef_id BIGINT NOT NULL, transaction_token VARCHAR(20) NOT NULL, date_debut_exploitation DATE NOT NULL, INDEX organisme_mindef_id_idx (organisme_mindef_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE signataire (contrat_id BIGINT, organisme_id BIGINT, service_id BIGINT, INDEX service_id_idx (service_id), PRIMARY KEY(contrat_id, organisme_id)) ENGINE = INNODB;
CREATE TABLE soutien (id BIGINT AUTO_INCREMENT, date_emission DATETIME, reference VARCHAR(255), dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_action (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_contrat (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_declaration (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, est_actif TINYINT(1) DEFAULT '1' NOT NULL, statut_declaration_id BIGINT, INDEX statut_declaration_id_idx (statut_declaration_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_dossier_bpi (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255), precedent_statut_dossier_bpi_id BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX precedent_statut_dossier_bpi_id_idx (precedent_statut_dossier_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_dossier_ere (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_dossier_mip (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255), precedent_statut_dossier_mip_id BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX precedent_statut_dossier_mip_id_idx (precedent_statut_dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_dossier_postdoc (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_dossier_these (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_projet_mip (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE statut_valorisation_externe (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE suivi_dossier_ere (id BIGINT AUTO_INCREMENT, descriptif TEXT, date_demande DATE, date_echeance DATE, date_reception DATE, dossier_ere_id BIGINT NOT NULL, type_suivi_ere_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_ere_id_idx (dossier_ere_id), INDEX type_suivi_ere_id_idx (type_suivi_ere_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE suivi_dossier_postdoc (id BIGINT AUTO_INCREMENT, descriptif TEXT, date_demande DATE, date_echeance DATE, date_reception DATE, dossier_postdoc_id BIGINT NOT NULL, type_suivi_postdoc_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX type_suivi_postdoc_id_idx (type_suivi_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE suivi_dossier_these (id BIGINT AUTO_INCREMENT, descriptif TEXT, date_demande DATE, date_reception DATE, dossier_these_id BIGINT NOT NULL, type_suivi_these_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_these_id_idx (dossier_these_id), INDEX type_suivi_these_id_idx (type_suivi_these_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tache (cle VARCHAR(255), debut DATETIME, fin DATETIME, pid BIGINT, erreur TINYINT(1) NOT NULL, resultat VARCHAR(255), PRIMARY KEY(cle)) ENGINE = INNODB;
CREATE TABLE transfert_cloture (id BIGINT AUTO_INCREMENT, date_transfert DATETIME, reference_transfert VARCHAR(255), destination_autre VARCHAR(255), date_cloture DATETIME, reference_cloture VARCHAR(255), dossier_mip_id BIGINT NOT NULL, entite_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), INDEX entite_id_idx (entite_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_action (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_alerte_bpi (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_contentieux (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_contrat (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_convention_organisme (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_cursus (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_depot (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, abreviation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_document_ere (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_document_postdoc (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_document_these (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_dossier_mris (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_engagement (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, est_negatif TINYINT(1) DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_evenement_ere (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_evenement_postdoc (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_evenement_these (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_innovateur (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_organisme (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_redevance (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_relance_dossier_mip (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_suivi_ere (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_suivi_postdoc (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type_suivi_these (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE utilisateur (id BIGINT AUTO_INCREMENT, civilite_id BIGINT NOT NULL, nom VARCHAR(255) NOT NULL, nom_jeunefille VARCHAR(255), prenom VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, email_perso VARCHAR(255), mot_de_passe VARCHAR(255) NOT NULL, date_naissance DATE, date_deces DATE, adresse_perso VARCHAR(255), code_postal_perso VARCHAR(255), complement_adresse_perso VARCHAR(255), ville_perso_id BIGINT, telephone_fixe VARCHAR(20), telephone_mobile VARCHAR(20), telephone_autre VARCHAR(20), telephone_fixe_perso VARCHAR(20), telephone_mobile_perso VARCHAR(20), fax VARCHAR(20), photographie VARCHAR(255), photographie_orig VARCHAR(255), est_actif TINYINT(1) DEFAULT '1' NOT NULL, uid VARCHAR(255), entite_id BIGINT, entite_ancienne_id BIGINT, organisme_mindef_id BIGINT, grade_id BIGINT, statut_id BIGINT, est_utilisateur_ldap TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX civilite_id_idx (civilite_id), INDEX statut_id_idx (statut_id), INDEX entite_id_idx (entite_id), INDEX entite_ancienne_id_idx (entite_ancienne_id), INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX grade_id_idx (grade_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX ville_perso_id_idx (ville_perso_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE utilisateur_domaine_scientifique (utilisateur_id BIGINT, domaine_scientifique_id BIGINT, PRIMARY KEY(utilisateur_id, domaine_scientifique_id)) ENGINE = INNODB;
CREATE TABLE utilisateur_profil (utilisateur_id BIGINT, profil_id BIGINT, PRIMARY KEY(utilisateur_id, profil_id)) ENGINE = INNODB;
CREATE TABLE valeur_note (id BIGINT AUTO_INCREMENT, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE valorisation (id BIGINT AUTO_INCREMENT, date_demande_generalisation DATETIME, destinataire_demande_generalisation VARCHAR(255), avantage_inconvenient VARCHAR(255), retour_experience VARCHAR(255), fiche_internet VARCHAR(255), dossier_mip_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX dossier_mip_id_idx (dossier_mip_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE valorisation_bpi (id BIGINT AUTO_INCREMENT, dossier_bpi_id BIGINT NOT NULL, commentaire TEXT, est_evalue TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE valorisation_externe (id BIGINT AUTO_INCREMENT, statut_valorisation_externe_id BIGINT NOT NULL, contrat_id BIGINT, organisme_id BIGINT NOT NULL, valorisation_bpi_id BIGINT NOT NULL, INDEX statut_valorisation_externe_id_idx (statut_valorisation_externe_id), INDEX contrat_id_idx (contrat_id), INDEX organisme_id_idx (organisme_id), INDEX valorisation_bpi_id_idx (valorisation_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE valorisation_interne (id BIGINT AUTO_INCREMENT, date_debut_exploitation DATE, organisme_mindef_id BIGINT NOT NULL, valorisation_bpi_id BIGINT NOT NULL, INDEX organisme_mindef_id_idx (organisme_mindef_id), INDEX valorisation_bpi_id_idx (valorisation_bpi_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE versement_dossier_ere (id BIGINT AUTO_INCREMENT, date_versement DATE, montant_versement FLOAT(18, 2), dossier_ere_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_ere_id_idx (dossier_ere_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE versement_dossier_postdoc (id BIGINT AUTO_INCREMENT, date_versement DATE, montant_versement FLOAT(18, 2), dossier_postdoc_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE versement_dossier_these (id BIGINT AUTO_INCREMENT, date_versement DATE, montant_versement FLOAT(18, 2), dossier_these_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX dossier_these_id_idx (dossier_these_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE view_recherche (id BIGINT AUTO_INCREMENT, dossier_mip_id BIGINT, dossier_bpi_id BIGINT, dossier_ere_id BIGINT, dossier_postdoc_id BIGINT, dossier_these_id BIGINT, metier_id BIGINT, titre VARCHAR(255), etat_partage_id BIGINT, created_at DATE, INDEX dossier_mip_id_idx (dossier_mip_id), INDEX dossier_bpi_id_idx (dossier_bpi_id), INDEX dossier_ere_id_idx (dossier_ere_id), INDEX dossier_postdoc_id_idx (dossier_postdoc_id), INDEX dossier_these_id_idx (dossier_these_id), INDEX metier_id_idx (metier_id), INDEX etat_partage_id_idx (etat_partage_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ville (id BIGINT AUTO_INCREMENT, nom VARCHAR(255) NOT NULL, code_postal VARCHAR(5) NOT NULL, departement_id BIGINT, est_actif TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX departement_id_idx (departement_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE aboutissement_ere ADD CONSTRAINT aboutissement_ere_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE aboutissement_ere ADD CONSTRAINT aboutissement_ere_dossier_ere_id_dossier_postdoc_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE aboutissement_ere ADD CONSTRAINT aboutissement_ere_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE aboutissement_postdoc ADD CONSTRAINT aboutissement_postdoc_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE aboutissement_postdoc ADD CONSTRAINT aboutissement_postdoc_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE aboutissement_postdoc ADD CONSTRAINT aboutissement_postdoc_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE aboutissement_these ADD CONSTRAINT aboutissement_these_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE aboutissement_these ADD CONSTRAINT aboutissement_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE aboutissement_these ADD CONSTRAINT aboutissement_these_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE action ADD CONSTRAINT action_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE action ADD CONSTRAINT action_type_action_id_type_action_id FOREIGN KEY (type_action_id) REFERENCES type_action(id);
ALTER TABLE action ADD CONSTRAINT action_statut_action_id_statut_action_id FOREIGN KEY (statut_action_id) REFERENCES statut_action(id);
ALTER TABLE action ADD CONSTRAINT action_pilote_id_utilisateur_id FOREIGN KEY (pilote_id) REFERENCES utilisateur(id);
ALTER TABLE action ADD CONSTRAINT action_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE action ADD CONSTRAINT action_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE alerte_bpi ADD CONSTRAINT alerte_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE alerte_bpi ADD CONSTRAINT alerte_bpi_type_alerte_bpi_id_type_alerte_bpi_id FOREIGN KEY (type_alerte_bpi_id) REFERENCES type_alerte_bpi(id);
ALTER TABLE alerte_bpi ADD CONSTRAINT alerte_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE alerte_bpi ADD CONSTRAINT alerte_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE alerte_bpi ADD CONSTRAINT alerte_bpi_brevet_id_brevet_id FOREIGN KEY (brevet_id) REFERENCES brevet(id);
ALTER TABLE alerte_bpi ADD CONSTRAINT alerte_bpi_action_id_action_id FOREIGN KEY (action_id) REFERENCES action(id);
ALTER TABLE attribution_droit ADD CONSTRAINT attribution_droit_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE attribution_droit ADD CONSTRAINT attribution_droit_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE attribution_droit ADD CONSTRAINT attribution_droit_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE attribution_droit ADD CONSTRAINT attribution_droit_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id);
ALTER TABLE attribution_droit ADD CONSTRAINT attribution_droit_brevet_id_brevet_id FOREIGN KEY (brevet_id) REFERENCES brevet(id);
ALTER TABLE avis_etatmajor ADD CONSTRAINT avis_etatmajor_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE avis_etatmajor ADD CONSTRAINT avis_etatmajor_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE avis_etatmajor ADD CONSTRAINT avis_etatmajor_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE avis_mris ADD CONSTRAINT avis_mris_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE avis_mris ADD CONSTRAINT avis_mris_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE avis_mris_dossier_ere ADD CONSTRAINT avis_mris_dossier_ere_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE avis_mris_dossier_ere ADD CONSTRAINT avis_mris_dossier_ere_avis_mris_id_avis_mris_id FOREIGN KEY (avis_mris_id) REFERENCES avis_mris(id) ON DELETE CASCADE;
ALTER TABLE avis_mris_dossier_postdoc ADD CONSTRAINT avis_mris_dossier_postdoc_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE avis_mris_dossier_postdoc ADD CONSTRAINT avis_mris_dossier_postdoc_avis_mris_id_avis_mris_id FOREIGN KEY (avis_mris_id) REFERENCES avis_mris(id) ON DELETE CASCADE;
ALTER TABLE avis_mris_dossier_these ADD CONSTRAINT avis_mris_dossier_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE avis_mris_dossier_these ADD CONSTRAINT avis_mris_dossier_these_avis_mris_id_avis_mris_id FOREIGN KEY (avis_mris_id) REFERENCES avis_mris(id) ON DELETE CASCADE;
ALTER TABLE brevet ADD CONSTRAINT brevet_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_type_depot_id_type_depot_id FOREIGN KEY (type_depot_id) REFERENCES type_depot(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_responsable_id_utilisateur_id FOREIGN KEY (responsable_id) REFERENCES utilisateur(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_phase_depot_brevet_id_phase_depot_brevet_id FOREIGN KEY (phase_depot_brevet_id) REFERENCES phase_depot_brevet(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_pays_id_pays_id FOREIGN KEY (pays_id) REFERENCES pays(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_parent_id_brevet_id FOREIGN KEY (parent_id) REFERENCES brevet(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE brevet ADD CONSTRAINT brevet_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id);
ALTER TABLE budget ADD CONSTRAINT budget_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE budget ADD CONSTRAINT budget_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE budget ADD CONSTRAINT budget_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE budget ADD CONSTRAINT budget_budget_type_id_budget_type_id FOREIGN KEY (budget_type_id) REFERENCES budget_type(id);
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT classement_invention_inventeur_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT classement_invention_inventeur_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT classement_invention_inventeur_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT classement_invention_inventeur_concerne_id_inventeur_id FOREIGN KEY (concerne_id) REFERENCES inventeur(id) ON DELETE CASCADE;
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT classement_invention_inventeur_classement_final_id_classement_id FOREIGN KEY (classement_final_id) REFERENCES classement(id);
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT ccci_2 FOREIGN KEY (classement_propose_id) REFERENCES classement(id);
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT ccci_1 FOREIGN KEY (classement_hierarchie_id) REFERENCES classement(id);
ALTER TABLE classement_invention_inventeur ADD CONSTRAINT ccci FOREIGN KEY (classement_autorite_id) REFERENCES classement(id);
ALTER TABLE cofinance_these ADD CONSTRAINT cofinance_these_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE cofinance_these ADD CONSTRAINT cofinance_these_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE cofinance_these ADD CONSTRAINT cofinance_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE cofinance_these ADD CONSTRAINT cofinance_these_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE commission ADD CONSTRAINT commission_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE commission ADD CONSTRAINT commission_type_dossier_mris_id_type_dossier_mris_id FOREIGN KEY (type_dossier_mris_id) REFERENCES type_dossier_mris(id);
ALTER TABLE commission ADD CONSTRAINT commission_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE commission_intervenant ADD CONSTRAINT commission_intervenant_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id) ON DELETE CASCADE;
ALTER TABLE commission_intervenant ADD CONSTRAINT commission_intervenant_commission_id_commission_id FOREIGN KEY (commission_id) REFERENCES commission(id) ON DELETE CASCADE;
ALTER TABLE commission_utilisateur ADD CONSTRAINT commission_utilisateur_utilisateur_id_utilisateur_id FOREIGN KEY (utilisateur_id) REFERENCES utilisateur(id);
ALTER TABLE commission_utilisateur ADD CONSTRAINT commission_utilisateur_commission_id_commission_id FOREIGN KEY (commission_id) REFERENCES commission(id) ON DELETE CASCADE;
ALTER TABLE contact_se ADD CONSTRAINT contact_se_ville_id_ville_id FOREIGN KEY (ville_id) REFERENCES ville(id);
ALTER TABLE contact_se ADD CONSTRAINT contact_se_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE contact_se ADD CONSTRAINT contact_se_metier_id_metier_id FOREIGN KEY (metier_id) REFERENCES metier(id);
ALTER TABLE contact_se ADD CONSTRAINT contact_se_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE contact_se ADD CONSTRAINT contact_se_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE contentieux ADD CONSTRAINT contentieux_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE contentieux ADD CONSTRAINT contentieux_type_contentieux_id_type_contentieux_id FOREIGN KEY (type_contentieux_id) REFERENCES type_contentieux(id);
ALTER TABLE contentieux ADD CONSTRAINT contentieux_part_inventive_id_part_inventive_id FOREIGN KEY (part_inventive_id) REFERENCES part_inventive(id);
ALTER TABLE contentieux ADD CONSTRAINT contentieux_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE contrat ADD CONSTRAINT contrat_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE contrat ADD CONSTRAINT contrat_statut_contrat_id_statut_contrat_id FOREIGN KEY (statut_contrat_id) REFERENCES statut_contrat(id);
ALTER TABLE contrat ADD CONSTRAINT contrat_juriste_id_utilisateur_id FOREIGN KEY (juriste_id) REFERENCES utilisateur(id);
ALTER TABLE contrat ADD CONSTRAINT contrat_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE contrat ADD CONSTRAINT contrat_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE contrat_type_contrat ADD CONSTRAINT contrat_type_contrat_type_contrat_id_type_contrat_id FOREIGN KEY (type_contrat_id) REFERENCES type_contrat(id);
ALTER TABLE contrat_type_contrat ADD CONSTRAINT contrat_type_contrat_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id) ON DELETE CASCADE;
ALTER TABLE convention_dossier_ere ADD CONSTRAINT ctti FOREIGN KEY (type_convention_organisme_id) REFERENCES type_convention_organisme(id);
ALTER TABLE convention_dossier_ere ADD CONSTRAINT convention_dossier_ere_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE convention_dossier_ere ADD CONSTRAINT convention_dossier_ere_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id);
ALTER TABLE convention_dossier_ere ADD CONSTRAINT convention_dossier_ere_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE convention_dossier_postdoc ADD CONSTRAINT ctti_1 FOREIGN KEY (type_convention_organisme_id) REFERENCES type_convention_organisme(id);
ALTER TABLE convention_dossier_postdoc ADD CONSTRAINT convention_dossier_postdoc_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE convention_dossier_postdoc ADD CONSTRAINT convention_dossier_postdoc_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id);
ALTER TABLE convention_dossier_postdoc ADD CONSTRAINT convention_dossier_postdoc_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE convention_dossier_these ADD CONSTRAINT ctti_2 FOREIGN KEY (type_convention_organisme_id) REFERENCES type_convention_organisme(id);
ALTER TABLE convention_dossier_these ADD CONSTRAINT convention_dossier_these_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE convention_dossier_these ADD CONSTRAINT convention_dossier_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id);
ALTER TABLE convention_dossier_these ADD CONSTRAINT convention_dossier_these_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE convention_organisme ADD CONSTRAINT ctti_3 FOREIGN KEY (type_convention_organisme_id) REFERENCES type_convention_organisme(id);
ALTER TABLE convention_organisme ADD CONSTRAINT convention_organisme_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE convention_organisme ADD CONSTRAINT convention_organisme_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE convention_organisme ADD CONSTRAINT convention_organisme_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE departement ADD CONSTRAINT departement_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE departement ADD CONSTRAINT departement_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE departement ADD CONSTRAINT departement_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE document_mris ADD CONSTRAINT document_mris_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE document_mris ADD CONSTRAINT document_mris_type_document_these_id_type_document_these_id FOREIGN KEY (type_document_these_id) REFERENCES type_document_these(id);
ALTER TABLE document_mris ADD CONSTRAINT document_mris_type_document_postdoc_id_type_document_postdoc_id FOREIGN KEY (type_document_postdoc_id) REFERENCES type_document_postdoc(id);
ALTER TABLE document_mris ADD CONSTRAINT document_mris_type_document_ere_id_type_document_ere_id FOREIGN KEY (type_document_ere_id) REFERENCES type_document_ere(id);
ALTER TABLE document_mris ADD CONSTRAINT document_mris_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE document_mris ADD CONSTRAINT document_mris_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE document_mris ADD CONSTRAINT document_mris_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE document_mris ADD CONSTRAINT document_mris_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE documents_bpi ADD CONSTRAINT documents_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE documents_bpi ADD CONSTRAINT documents_bpi_statut_dossier_bpi_id_statut_dossier_bpi_id FOREIGN KEY (statut_dossier_bpi_id) REFERENCES statut_dossier_bpi(id);
ALTER TABLE documents_bpi ADD CONSTRAINT documents_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE documents_bpi ADD CONSTRAINT documents_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE documents_mip ADD CONSTRAINT documents_mip_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE documents_mip ADD CONSTRAINT documents_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE documents_mip ADD CONSTRAINT documents_mip_documents_mip_type_id_documents_mip_type_id FOREIGN KEY (documents_mip_type_id) REFERENCES documents_mip_type(id);
ALTER TABLE documents_mip ADD CONSTRAINT documents_mip_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_statut_dossier_bpi_id_statut_dossier_bpi_id FOREIGN KEY (statut_dossier_bpi_id) REFERENCES statut_dossier_bpi(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_statut_declaration_id_statut_declaration_id FOREIGN KEY (statut_declaration_id) REFERENCES statut_declaration(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_hierarchie_locale_id_entite_id FOREIGN KEY (hierarchie_locale_id) REFERENCES entite(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_etat_partage_id_etat_partage_id FOREIGN KEY (etat_partage_id) REFERENCES etat_partage(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_bpi ADD CONSTRAINT dossier_bpi_autorite_decision_id_entite_id FOREIGN KEY (autorite_decision_id) REFERENCES entite(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_statut_dossier_ere_id_statut_dossier_ere_id FOREIGN KEY (statut_dossier_ere_id) REFERENCES statut_dossier_ere(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_realise_par_etudiant_id FOREIGN KEY (realise_par) REFERENCES etudiant(id) ON DELETE CASCADE;
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_pilote_par_utilisateur_id FOREIGN KEY (pilote_par) REFERENCES utilisateur(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_etat_partage_id_etat_partage_id FOREIGN KEY (etat_partage_id) REFERENCES etat_partage(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_domaine_scientifique_id_domaine_scientifique_id FOREIGN KEY (domaine_scientifique_id) REFERENCES domaine_scientifique(id);
ALTER TABLE dossier_ere ADD CONSTRAINT dossier_ere_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_ere_laboratoire ADD CONSTRAINT dossier_ere_laboratoire_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id) ON DELETE CASCADE;
ALTER TABLE dossier_ere_laboratoire ADD CONSTRAINT dossier_ere_laboratoire_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_statut_projet_mip_id_statut_projet_mip_id FOREIGN KEY (statut_projet_mip_id) REFERENCES statut_projet_mip(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_statut_dossier_mip_id_statut_dossier_mip_id FOREIGN KEY (statut_dossier_mip_id) REFERENCES statut_dossier_mip(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_pilote_id_utilisateur_id FOREIGN KEY (pilote_id) REFERENCES utilisateur(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_niveau_protection_id_niveau_protection_id FOREIGN KEY (niveau_protection_id) REFERENCES niveau_protection(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_etat_partage_id_etat_partage_id FOREIGN KEY (etat_partage_id) REFERENCES etat_partage(id);
ALTER TABLE dossier_mip ADD CONSTRAINT dossier_mip_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_mip_dossier_bpi ADD CONSTRAINT dossier_mip_dossier_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_mip_dossier_bpi ADD CONSTRAINT dossier_mip_dossier_bpi_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE dossier_mip_dossier_bpi ADD CONSTRAINT dossier_mip_dossier_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE dossier_mip_dossier_bpi ADD CONSTRAINT dossier_mip_dossier_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dssi FOREIGN KEY (statut_dossier_postdoc_id) REFERENCES statut_dossier_postdoc(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_realise_par_etudiant_id FOREIGN KEY (realise_par) REFERENCES etudiant(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_pilote_par_utilisateur_id FOREIGN KEY (pilote_par) REFERENCES utilisateur(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_etat_partage_id_etat_partage_id FOREIGN KEY (etat_partage_id) REFERENCES etat_partage(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_domaine_scientifique_id_domaine_scientifique_id FOREIGN KEY (domaine_scientifique_id) REFERENCES domaine_scientifique(id);
ALTER TABLE dossier_postdoc ADD CONSTRAINT dossier_postdoc_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_postdoc_laboratoire ADD CONSTRAINT dossier_postdoc_laboratoire_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id) ON DELETE CASCADE;
ALTER TABLE dossier_postdoc_laboratoire ADD CONSTRAINT dddi FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE dossier_these ADD CONSTRAINT dtti FOREIGN KEY (type_convention_organisme_id) REFERENCES type_convention_organisme(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_statut_dossier_these_id_statut_dossier_these_id FOREIGN KEY (statut_dossier_these_id) REFERENCES statut_dossier_these(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_realise_par_etudiant_id FOREIGN KEY (realise_par) REFERENCES etudiant(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_pilote_par_utilisateur_id FOREIGN KEY (pilote_par) REFERENCES utilisateur(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_etat_partage_id_etat_partage_id FOREIGN KEY (etat_partage_id) REFERENCES etat_partage(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_domaine_scientifique_id_domaine_scientifique_id FOREIGN KEY (domaine_scientifique_id) REFERENCES domaine_scientifique(id);
ALTER TABLE dossier_these ADD CONSTRAINT dossier_these_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE dossier_these_laboratoire ADD CONSTRAINT dossier_these_laboratoire_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id) ON DELETE CASCADE;
ALTER TABLE dossier_these_laboratoire ADD CONSTRAINT dossier_these_laboratoire_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE echeance ADD CONSTRAINT echeance_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE echeance ADD CONSTRAINT echeance_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE echeance ADD CONSTRAINT echeance_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE echec_authentification ADD CONSTRAINT echec_authentification_utilisateur_id_utilisateur_id FOREIGN KEY (utilisateur_id) REFERENCES utilisateur(id);
ALTER TABLE encadrant_ere ADD CONSTRAINT encadrant_ere_role_ere_id_role_ere_id FOREIGN KEY (role_ere_id) REFERENCES role_ere(id);
ALTER TABLE encadrant_ere ADD CONSTRAINT encadrant_ere_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id) ON DELETE CASCADE;
ALTER TABLE encadrant_ere ADD CONSTRAINT encadrant_ere_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE encadrant_postdoc ADD CONSTRAINT encadrant_postdoc_role_postdoc_id_role_postdoc_id FOREIGN KEY (role_postdoc_id) REFERENCES role_postdoc(id);
ALTER TABLE encadrant_postdoc ADD CONSTRAINT encadrant_postdoc_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id) ON DELETE CASCADE;
ALTER TABLE encadrant_postdoc ADD CONSTRAINT encadrant_postdoc_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE encadrant_these ADD CONSTRAINT encadrant_these_role_these_id_role_these_id FOREIGN KEY (role_these_id) REFERENCES role_these(id);
ALTER TABLE encadrant_these ADD CONSTRAINT encadrant_these_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id) ON DELETE CASCADE;
ALTER TABLE encadrant_these ADD CONSTRAINT encadrant_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE engagement ADD CONSTRAINT engagement_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE engagement ADD CONSTRAINT engagement_type_engagement_id_type_engagement_id FOREIGN KEY (type_engagement_id) REFERENCES type_engagement(id);
ALTER TABLE engagement ADD CONSTRAINT engagement_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE engagement ADD CONSTRAINT engagement_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id);
ALTER TABLE engagement ADD CONSTRAINT engagement_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE entite ADD CONSTRAINT entite_ville_id_ville_id FOREIGN KEY (ville_id) REFERENCES ville(id);
ALTER TABLE entite ADD CONSTRAINT entite_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE entite ADD CONSTRAINT entite_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE entite ADD CONSTRAINT entite_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE entite ADD CONSTRAINT entite_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE etudiant ADD CONSTRAINT etudiant_ville_id_ville_id FOREIGN KEY (ville_id) REFERENCES ville(id);
ALTER TABLE etudiant ADD CONSTRAINT etudiant_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE etudiant ADD CONSTRAINT etudiant_type_cursus_id_type_cursus_id FOREIGN KEY (type_cursus_id) REFERENCES type_cursus(id);
ALTER TABLE etudiant ADD CONSTRAINT etudiant_pays_id_pays_id FOREIGN KEY (pays_id) REFERENCES pays(id);
ALTER TABLE etudiant ADD CONSTRAINT etudiant_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE etudiant ADD CONSTRAINT etudiant_civilite_id_civilite_id FOREIGN KEY (civilite_id) REFERENCES civilite(id);
ALTER TABLE evaluation ADD CONSTRAINT evaluation_valeur_note_id_valeur_note_id FOREIGN KEY (valeur_note_id) REFERENCES valeur_note(id);
ALTER TABLE evaluation ADD CONSTRAINT evaluation_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE evaluation ADD CONSTRAINT evaluation_note_id_note_id FOREIGN KEY (note_id) REFERENCES note(id);
ALTER TABLE evaluation ADD CONSTRAINT evaluation_invitation_id_invitation_id FOREIGN KEY (invitation_id) REFERENCES invitation(id);
ALTER TABLE evaluation ADD CONSTRAINT evaluation_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE evaluation ADD CONSTRAINT evaluation_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE evaluation ADD CONSTRAINT evaluation_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE evaluation ADD CONSTRAINT evaluation_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE evenement_mip ADD CONSTRAINT evenement_mip_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE evenement_mip ADD CONSTRAINT evenement_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE evenement_mip ADD CONSTRAINT evenement_mip_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_type_evenement_these_id_type_evenement_these_id FOREIGN KEY (type_evenement_these_id) REFERENCES type_evenement_these(id);
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_type_evenement_ere_id_type_evenement_ere_id FOREIGN KEY (type_evenement_ere_id) REFERENCES type_evenement_ere(id);
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE evenement_mris ADD CONSTRAINT evenement_mris_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE evenement_mris ADD CONSTRAINT etti FOREIGN KEY (type_evenement_postdoc_id) REFERENCES type_evenement_postdoc(id);
ALTER TABLE exploitation_bpi ADD CONSTRAINT exploitation_bpi_nature_interne_id_nature_exploitation_id FOREIGN KEY (nature_interne_id) REFERENCES nature_exploitation(id);
ALTER TABLE exploitation_bpi ADD CONSTRAINT exploitation_bpi_nature_externe_id_nature_exploitation_id FOREIGN KEY (nature_externe_id) REFERENCES nature_exploitation(id);
ALTER TABLE exploitation_bpi ADD CONSTRAINT exploitation_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE exploitation_externe ADD CONSTRAINT exploitation_externe_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE exploitation_externe ADD CONSTRAINT exploitation_externe_redevance_id_redevance_id FOREIGN KEY (redevance_id) REFERENCES redevance(id);
ALTER TABLE exploitation_externe ADD CONSTRAINT exploitation_externe_part_inventive_id_part_inventive_id FOREIGN KEY (part_inventive_id) REFERENCES part_inventive(id) ON DELETE CASCADE;
ALTER TABLE exploitation_externe ADD CONSTRAINT exploitation_externe_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE exploitation_interne ADD CONSTRAINT exploitation_interne_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE exploitation_interne ADD CONSTRAINT exploitation_interne_rapporteur_id_utilisateur_id FOREIGN KEY (rapporteur_id) REFERENCES utilisateur(id);
ALTER TABLE exploitation_interne ADD CONSTRAINT exploitation_interne_part_inventive_id_part_inventive_id FOREIGN KEY (part_inventive_id) REFERENCES part_inventive(id) ON DELETE CASCADE;
ALTER TABLE exploitation_interne ADD CONSTRAINT exploitation_interne_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE financement ADD CONSTRAINT financement_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE financement ADD CONSTRAINT financement_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE financement ADD CONSTRAINT financement_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id);
ALTER TABLE financement ADD CONSTRAINT financement_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE financement ADD CONSTRAINT financement_budget_type_id_budget_type_id FOREIGN KEY (budget_type_id) REFERENCES budget_type(id);
ALTER TABLE grade ADD CONSTRAINT grade_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE grade ADD CONSTRAINT grade_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE grade ADD CONSTRAINT grade_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE innovateur_dossier_mip ADD CONSTRAINT innovateur_dossier_mip_utilisateur_id_utilisateur_id FOREIGN KEY (utilisateur_id) REFERENCES utilisateur(id) ON DELETE CASCADE;
ALTER TABLE innovateur_dossier_mip ADD CONSTRAINT innovateur_dossier_mip_type_innovateur_id_type_innovateur_id FOREIGN KEY (type_innovateur_id) REFERENCES type_innovateur(id);
ALTER TABLE innovateur_dossier_mip ADD CONSTRAINT innovateur_dossier_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE intervenant ADD CONSTRAINT intervenant_ville_id_ville_id FOREIGN KEY (ville_id) REFERENCES ville(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_pays_id_pays_id FOREIGN KEY (pays_id) REFERENCES pays(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE intervenant ADD CONSTRAINT intervenant_civilite_id_civilite_id FOREIGN KEY (civilite_id) REFERENCES civilite(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_ville_id_ville_id FOREIGN KEY (ville_id) REFERENCES ville(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_grade_id_grade_id FOREIGN KEY (grade_id) REFERENCES grade(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE inventeur ADD CONSTRAINT inventeur_civilite_id_civilite_id FOREIGN KEY (civilite_id) REFERENCES civilite(id);
ALTER TABLE invitation ADD CONSTRAINT invitation_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE invitation ADD CONSTRAINT invitation_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id) ON DELETE CASCADE;
ALTER TABLE invitation ADD CONSTRAINT invitation_commission_id_commission_id FOREIGN KEY (commission_id) REFERENCES commission(id) ON DELETE CASCADE;
ALTER TABLE laboratoire ADD CONSTRAINT laboratoire_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE laboratoire ADD CONSTRAINT laboratoire_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id);
ALTER TABLE laboratoire ADD CONSTRAINT laboratoire_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE laboratoire ADD CONSTRAINT laboratoire_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE liaison_mip_bpi ADD CONSTRAINT liaison_mip_bpi_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE liaison_mip_bpi ADD CONSTRAINT liaison_mip_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE libelle_organisme ADD CONSTRAINT libelle_organisme_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE libelle_organisme ADD CONSTRAINT libelle_organisme_metier_id_metier_id FOREIGN KEY (metier_id) REFERENCES metier(id);
ALTER TABLE mail ADD CONSTRAINT mail_statut_id_mail_statut_id FOREIGN KEY (statut_id) REFERENCES mail_statut(id);
ALTER TABLE mail ADD CONSTRAINT mail_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE modele_lettre ADD CONSTRAINT modele_lettre_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE modele_lettre ADD CONSTRAINT modele_lettre_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE notification ADD CONSTRAINT notification_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE notification ADD CONSTRAINT notification_metier_id_metier_id FOREIGN KEY (metier_id) REFERENCES metier(id);
ALTER TABLE notification ADD CONSTRAINT notification_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE organisme ADD CONSTRAINT organisme_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE organisme ADD CONSTRAINT organisme_type_organisme_id_type_organisme_id FOREIGN KEY (type_organisme_id) REFERENCES type_organisme(id);
ALTER TABLE organisme ADD CONSTRAINT organisme_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE organisme_mindef ADD CONSTRAINT organisme_mindef_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE organisme_mindef ADD CONSTRAINT organisme_mindef_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE paiement ADD CONSTRAINT paiement_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE paiement ADD CONSTRAINT paiement_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE paiement ADD CONSTRAINT paiement_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id);
ALTER TABLE paiement ADD CONSTRAINT paiement_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE part_inventive ADD CONSTRAINT part_inventive_inventeur_id_inventeur_id FOREIGN KEY (inventeur_id) REFERENCES inventeur(id) ON DELETE CASCADE;
ALTER TABLE part_inventive ADD CONSTRAINT part_inventive_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE phase_depot_brevet ADD CONSTRAINT phase_depot_brevet_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE phase_depot_brevet ADD CONSTRAINT phase_depot_brevet_phase_depot_brevet_id_phase_depot_brevet_id FOREIGN KEY (phase_depot_brevet_id) REFERENCES phase_depot_brevet(id);
ALTER TABLE phase_depot_brevet ADD CONSTRAINT phase_depot_brevet_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_ville_id_ville_id FOREIGN KEY (ville_id) REFERENCES ville(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_pays_id_pays_id FOREIGN KEY (pays_id) REFERENCES pays(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_metier_id_metier_id FOREIGN KEY (metier_id) REFERENCES metier(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id);
ALTER TABLE point_contact ADD CONSTRAINT point_contact_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE prix_dossier_mip ADD CONSTRAINT prix_dossier_mip_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE prix_dossier_mip ADD CONSTRAINT prix_dossier_mip_prix_id_prix_id FOREIGN KEY (prix_id) REFERENCES prix(id);
ALTER TABLE prix_dossier_mip ADD CONSTRAINT prix_dossier_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE prix_dossier_mip ADD CONSTRAINT prix_dossier_mip_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE profil ADD CONSTRAINT profil_metier_id_metier_id FOREIGN KEY (metier_id) REFERENCES metier(id);
ALTER TABLE recompenses ADD CONSTRAINT recompenses_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE recompenses ADD CONSTRAINT recompenses_part_inventive_id_part_inventive_id FOREIGN KEY (part_inventive_id) REFERENCES part_inventive(id) ON DELETE CASCADE;
ALTER TABLE recompenses ADD CONSTRAINT recompenses_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE redevance ADD CONSTRAINT redevance_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE redevance ADD CONSTRAINT redevance_type_redevance_id_type_redevance_id FOREIGN KEY (type_redevance_id) REFERENCES type_redevance(id);
ALTER TABLE redevance ADD CONSTRAINT redevance_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE redevance ADD CONSTRAINT redevance_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE redevance ADD CONSTRAINT redevance_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE redevance ADD CONSTRAINT redevance_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id);
ALTER TABLE relance_dossier_mip ADD CONSTRAINT rtti FOREIGN KEY (type_relance_dossier_mip_id) REFERENCES type_relance_dossier_mip(id);
ALTER TABLE relance_dossier_mip ADD CONSTRAINT relance_dossier_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id);
ALTER TABLE remarque_bpi ADD CONSTRAINT remarque_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE remarque_bpi ADD CONSTRAINT remarque_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE remarque_bpi ADD CONSTRAINT remarque_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE remarque_mip ADD CONSTRAINT remarque_mip_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE remarque_mip ADD CONSTRAINT remarque_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE remarque_mip ADD CONSTRAINT remarque_mip_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE remarque_mris ADD CONSTRAINT remarque_mris_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE remarque_mris ADD CONSTRAINT remarque_mris_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE remarque_mris ADD CONSTRAINT remarque_mris_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE remarque_mris ADD CONSTRAINT remarque_mris_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE remarque_mris ADD CONSTRAINT remarque_mris_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE remise_documents ADD CONSTRAINT remise_documents_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE remise_documents ADD CONSTRAINT remise_documents_mode_transmission_video_mode_transmission_id FOREIGN KEY (mode_transmission_video) REFERENCES mode_transmission(id);
ALTER TABLE remise_documents ADD CONSTRAINT remise_documents_mode_transmission_ea_mode_transmission_id FOREIGN KEY (mode_transmission_ea) REFERENCES mode_transmission(id);
ALTER TABLE remise_documents ADD CONSTRAINT remise_documents_mode_transmission_cr_mode_transmission_id FOREIGN KEY (mode_transmission_cr) REFERENCES mode_transmission(id);
ALTER TABLE remise_documents ADD CONSTRAINT remise_documents_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE remise_documents ADD CONSTRAINT remise_documents_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE rendez_vous ADD CONSTRAINT rendez_vous_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE rendez_vous ADD CONSTRAINT rendez_vous_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE rendez_vous ADD CONSTRAINT rendez_vous_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE service ADD CONSTRAINT service_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE service ADD CONSTRAINT service_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE service ADD CONSTRAINT service_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE session_cofinance_these ADD CONSTRAINT session_cofinance_these_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE session_cofinance_these ADD CONSTRAINT session_cofinance_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id);
ALTER TABLE session_contrat_signataire ADD CONSTRAINT session_contrat_signataire_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE session_contrat_signataire ADD CONSTRAINT session_contrat_signataire_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id) ON DELETE CASCADE;
ALTER TABLE session_contrat_signataire ADD CONSTRAINT session_contrat_signataire_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id) ON DELETE CASCADE;
ALTER TABLE session_dossier_ere_laboratoire ADD CONSTRAINT session_dossier_ere_laboratoire_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id);
ALTER TABLE session_dossier_ere_laboratoire ADD CONSTRAINT session_dossier_ere_laboratoire_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id);
ALTER TABLE session_dossier_postdoc_laboratoire ADD CONSTRAINT slli FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id);
ALTER TABLE session_dossier_postdoc_laboratoire ADD CONSTRAINT sddi FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id);
ALTER TABLE session_dossier_these_laboratoire ADD CONSTRAINT session_dossier_these_laboratoire_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id);
ALTER TABLE session_dossier_these_laboratoire ADD CONSTRAINT sddi_1 FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id);
ALTER TABLE session_encadrants_dossier_ere ADD CONSTRAINT session_encadrants_dossier_ere_role_ere_id_role_ere_id FOREIGN KEY (role_ere_id) REFERENCES role_ere(id);
ALTER TABLE session_encadrants_dossier_ere ADD CONSTRAINT session_encadrants_dossier_ere_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id);
ALTER TABLE session_encadrants_dossier_ere ADD CONSTRAINT session_encadrants_dossier_ere_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id);
ALTER TABLE session_encadrants_dossier_postdoc ADD CONSTRAINT srri FOREIGN KEY (role_postdoc_id) REFERENCES role_postdoc(id);
ALTER TABLE session_encadrants_dossier_postdoc ADD CONSTRAINT session_encadrants_dossier_postdoc_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id);
ALTER TABLE session_encadrants_dossier_postdoc ADD CONSTRAINT sddi_2 FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id);
ALTER TABLE session_encadrants_dossier_these ADD CONSTRAINT session_encadrants_dossier_these_role_these_id_role_these_id FOREIGN KEY (role_these_id) REFERENCES role_these(id);
ALTER TABLE session_encadrants_dossier_these ADD CONSTRAINT session_encadrants_dossier_these_intervenant_id_intervenant_id FOREIGN KEY (intervenant_id) REFERENCES intervenant(id);
ALTER TABLE session_encadrants_dossier_these ADD CONSTRAINT sddi_3 FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id);
ALTER TABLE session_innovateur_dossier_mip ADD CONSTRAINT snti FOREIGN KEY (nouveau_type_id) REFERENCES type_innovateur(id);
ALTER TABLE session_innovateur_dossier_mip ADD CONSTRAINT session_innovateur_dossier_mip_innovateur_id_utilisateur_id FOREIGN KEY (innovateur_id) REFERENCES utilisateur(id);
ALTER TABLE session_invitation_commission ADD CONSTRAINT session_invitation_commission_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE session_invitation_commission ADD CONSTRAINT session_invitation_commission_laboratoire_id_laboratoire_id FOREIGN KEY (laboratoire_id) REFERENCES laboratoire(id) ON DELETE CASCADE;
ALTER TABLE session_invitation_commission ADD CONSTRAINT session_invitation_commission_invitation_id_invitation_id FOREIGN KEY (invitation_id) REFERENCES invitation(id) ON DELETE CASCADE;
ALTER TABLE session_liaison_dossiers_bpi_mip ADD CONSTRAINT session_liaison_dossiers_bpi_mip_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE session_liaison_dossiers_mip_bpi ADD CONSTRAINT session_liaison_dossiers_mip_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE session_participant_exterieurs_commission ADD CONSTRAINT siii FOREIGN KEY (intervenant_id) REFERENCES intervenant(id) ON DELETE CASCADE;
ALTER TABLE session_participant_mindef_commission ADD CONSTRAINT spui FOREIGN KEY (participant_id) REFERENCES utilisateur(id) ON DELETE CASCADE;
ALTER TABLE session_situation_inventeurs ADD CONSTRAINT session_situation_inventeurs_inventeur_id_inventeur_id FOREIGN KEY (inventeur_id) REFERENCES inventeur(id) ON DELETE CASCADE;
ALTER TABLE session_valorisation_externe ADD CONSTRAINT sssi FOREIGN KEY (statut_valorisation_externe_id) REFERENCES statut_valorisation_externe(id) ON DELETE CASCADE;
ALTER TABLE session_valorisation_externe ADD CONSTRAINT session_valorisation_externe_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id) ON DELETE CASCADE;
ALTER TABLE session_valorisation_externe ADD CONSTRAINT session_valorisation_externe_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id) ON DELETE CASCADE;
ALTER TABLE session_valorisation_interne ADD CONSTRAINT sooi FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id) ON DELETE CASCADE;
ALTER TABLE signataire ADD CONSTRAINT signataire_service_id_service_id FOREIGN KEY (service_id) REFERENCES service(id) ON DELETE CASCADE;
ALTER TABLE signataire ADD CONSTRAINT signataire_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id) ON DELETE CASCADE;
ALTER TABLE signataire ADD CONSTRAINT signataire_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id) ON DELETE CASCADE;
ALTER TABLE soutien ADD CONSTRAINT soutien_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE soutien ADD CONSTRAINT soutien_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE soutien ADD CONSTRAINT soutien_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE statut_declaration ADD CONSTRAINT statut_declaration_statut_declaration_id_statut_declaration_id FOREIGN KEY (statut_declaration_id) REFERENCES statut_declaration(id);
ALTER TABLE statut_dossier_bpi ADD CONSTRAINT statut_dossier_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE statut_dossier_bpi ADD CONSTRAINT statut_dossier_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE statut_dossier_bpi ADD CONSTRAINT spsi FOREIGN KEY (precedent_statut_dossier_bpi_id) REFERENCES statut_dossier_bpi(id);
ALTER TABLE statut_dossier_mip ADD CONSTRAINT statut_dossier_mip_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE statut_dossier_mip ADD CONSTRAINT statut_dossier_mip_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE statut_dossier_mip ADD CONSTRAINT spsi_1 FOREIGN KEY (precedent_statut_dossier_mip_id) REFERENCES statut_dossier_mip(id);
ALTER TABLE suivi_dossier_ere ADD CONSTRAINT suivi_dossier_ere_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE suivi_dossier_ere ADD CONSTRAINT suivi_dossier_ere_type_suivi_ere_id_type_suivi_ere_id FOREIGN KEY (type_suivi_ere_id) REFERENCES type_suivi_ere(id);
ALTER TABLE suivi_dossier_ere ADD CONSTRAINT suivi_dossier_ere_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id) ON DELETE CASCADE;
ALTER TABLE suivi_dossier_ere ADD CONSTRAINT suivi_dossier_ere_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE suivi_dossier_postdoc ADD CONSTRAINT suivi_dossier_postdoc_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE suivi_dossier_postdoc ADD CONSTRAINT suivi_dossier_postdoc_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id) ON DELETE CASCADE;
ALTER TABLE suivi_dossier_postdoc ADD CONSTRAINT suivi_dossier_postdoc_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE suivi_dossier_postdoc ADD CONSTRAINT stti FOREIGN KEY (type_suivi_postdoc_id) REFERENCES type_suivi_postdoc(id);
ALTER TABLE suivi_dossier_these ADD CONSTRAINT suivi_dossier_these_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE suivi_dossier_these ADD CONSTRAINT suivi_dossier_these_type_suivi_these_id_type_suivi_these_id FOREIGN KEY (type_suivi_these_id) REFERENCES type_suivi_these(id);
ALTER TABLE suivi_dossier_these ADD CONSTRAINT suivi_dossier_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id) ON DELETE CASCADE;
ALTER TABLE suivi_dossier_these ADD CONSTRAINT suivi_dossier_these_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE transfert_cloture ADD CONSTRAINT transfert_cloture_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE transfert_cloture ADD CONSTRAINT transfert_cloture_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE transfert_cloture ADD CONSTRAINT transfert_cloture_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE transfert_cloture ADD CONSTRAINT transfert_cloture_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_ville_perso_id_ville_id FOREIGN KEY (ville_perso_id) REFERENCES ville(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_statut_id_statut_id FOREIGN KEY (statut_id) REFERENCES statut(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_grade_id_grade_id FOREIGN KEY (grade_id) REFERENCES grade(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_entite_id_entite_id FOREIGN KEY (entite_id) REFERENCES entite(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_entite_ancienne_id_entite_id FOREIGN KEY (entite_ancienne_id) REFERENCES entite(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_civilite_id_civilite_id FOREIGN KEY (civilite_id) REFERENCES civilite(id);
ALTER TABLE utilisateur_domaine_scientifique ADD CONSTRAINT utilisateur_domaine_scientifique_utilisateur_id_utilisateur_id FOREIGN KEY (utilisateur_id) REFERENCES utilisateur(id) ON DELETE CASCADE;
ALTER TABLE utilisateur_domaine_scientifique ADD CONSTRAINT uddi FOREIGN KEY (domaine_scientifique_id) REFERENCES domaine_scientifique(id) ON DELETE CASCADE;
ALTER TABLE utilisateur_profil ADD CONSTRAINT utilisateur_profil_utilisateur_id_utilisateur_id FOREIGN KEY (utilisateur_id) REFERENCES utilisateur(id) ON DELETE CASCADE;
ALTER TABLE utilisateur_profil ADD CONSTRAINT utilisateur_profil_profil_id_profil_id FOREIGN KEY (profil_id) REFERENCES profil(id) ON DELETE CASCADE;
ALTER TABLE valorisation ADD CONSTRAINT valorisation_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE valorisation ADD CONSTRAINT valorisation_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id) ON DELETE CASCADE;
ALTER TABLE valorisation ADD CONSTRAINT valorisation_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE valorisation_bpi ADD CONSTRAINT valorisation_bpi_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE valorisation_bpi ADD CONSTRAINT valorisation_bpi_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id) ON DELETE CASCADE;
ALTER TABLE valorisation_bpi ADD CONSTRAINT valorisation_bpi_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE valorisation_externe ADD CONSTRAINT vssi FOREIGN KEY (statut_valorisation_externe_id) REFERENCES statut_valorisation_externe(id) ON DELETE CASCADE;
ALTER TABLE valorisation_externe ADD CONSTRAINT valorisation_externe_valorisation_bpi_id_valorisation_bpi_id FOREIGN KEY (valorisation_bpi_id) REFERENCES valorisation_bpi(id) ON DELETE CASCADE;
ALTER TABLE valorisation_externe ADD CONSTRAINT valorisation_externe_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id) ON DELETE CASCADE;
ALTER TABLE valorisation_externe ADD CONSTRAINT valorisation_externe_contrat_id_contrat_id FOREIGN KEY (contrat_id) REFERENCES contrat(id) ON DELETE CASCADE;
ALTER TABLE valorisation_interne ADD CONSTRAINT valorisation_interne_valorisation_bpi_id_valorisation_bpi_id FOREIGN KEY (valorisation_bpi_id) REFERENCES valorisation_bpi(id) ON DELETE CASCADE;
ALTER TABLE valorisation_interne ADD CONSTRAINT valorisation_interne_organisme_mindef_id_organisme_mindef_id FOREIGN KEY (organisme_mindef_id) REFERENCES organisme_mindef(id) ON DELETE CASCADE;
ALTER TABLE versement_dossier_ere ADD CONSTRAINT versement_dossier_ere_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE versement_dossier_ere ADD CONSTRAINT versement_dossier_ere_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id);
ALTER TABLE versement_dossier_ere ADD CONSTRAINT versement_dossier_ere_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE versement_dossier_postdoc ADD CONSTRAINT versement_dossier_postdoc_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE versement_dossier_postdoc ADD CONSTRAINT versement_dossier_postdoc_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id);
ALTER TABLE versement_dossier_postdoc ADD CONSTRAINT versement_dossier_postdoc_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE versement_dossier_these ADD CONSTRAINT versement_dossier_these_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE versement_dossier_these ADD CONSTRAINT versement_dossier_these_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id);
ALTER TABLE versement_dossier_these ADD CONSTRAINT versement_dossier_these_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_metier_id_metier_id FOREIGN KEY (metier_id) REFERENCES metier(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_etat_partage_id_etat_partage_id FOREIGN KEY (etat_partage_id) REFERENCES etat_partage(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_dossier_these_id_dossier_these_id FOREIGN KEY (dossier_these_id) REFERENCES dossier_these(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_dossier_postdoc_id_dossier_postdoc_id FOREIGN KEY (dossier_postdoc_id) REFERENCES dossier_postdoc(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_dossier_mip_id_dossier_mip_id FOREIGN KEY (dossier_mip_id) REFERENCES dossier_mip(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_dossier_ere_id_dossier_ere_id FOREIGN KEY (dossier_ere_id) REFERENCES dossier_ere(id);
ALTER TABLE view_recherche ADD CONSTRAINT view_recherche_dossier_bpi_id_dossier_bpi_id FOREIGN KEY (dossier_bpi_id) REFERENCES dossier_bpi(id);
ALTER TABLE ville ADD CONSTRAINT ville_updated_by_utilisateur_id FOREIGN KEY (updated_by) REFERENCES utilisateur(id);
ALTER TABLE ville ADD CONSTRAINT ville_departement_id_departement_id FOREIGN KEY (departement_id) REFERENCES departement(id);
ALTER TABLE ville ADD CONSTRAINT ville_created_by_utilisateur_id FOREIGN KEY (created_by) REFERENCES utilisateur(id);
